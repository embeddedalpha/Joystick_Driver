.TH "Inc/cmsis_armclang_ltm.h" 3 "Version JSTDRVF4" "Joystick Driver" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Inc/cmsis_armclang_ltm.h \- CMSIS compiler armclang (Arm Compiler 6) header file\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__ASM\fP   __asm"
.br
.ti -1c
.RI "#define \fB__INLINE\fP   __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_INLINE\fP   static __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_FORCEINLINE\fP   \fB__attribute__\fP((always_inline)) static __inline"
.br
.ti -1c
.RI "#define \fB__NO_RETURN\fP   \fB__attribute__\fP((__noreturn__))"
.br
.ti -1c
.RI "#define \fB__USED\fP   \fB__attribute__\fP((used))"
.br
.ti -1c
.RI "#define \fB__WEAK\fP   \fB__attribute__\fP((weak))"
.br
.ti -1c
.RI "#define \fB__PACKED\fP   \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_STRUCT\fP   struct \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_UNION\fP   union \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32\fP(x)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_WRITE\fP(addr,  val)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_READ\fP(addr)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_WRITE\fP(addr,  val)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_READ\fP(addr)"
.br
.ti -1c
.RI "#define \fB__ALIGNED\fP(x)"
.br
.ti -1c
.RI "#define \fB__RESTRICT\fP   __restrict"
.br
.ti -1c
.RI "#define \fB__COMPILER_BARRIER\fP()"
.br
.ti -1c
.RI "#define \fB__PROGRAM_START\fP   __main"
.br
.ti -1c
.RI "#define \fB__INITIAL_SP\fP   Image$$ARM_LIB_STACK$$ZI$$Limit"
.br
.ti -1c
.RI "#define \fB__STACK_LIMIT\fP   Image$$ARM_LIB_STACK$$ZI$$Base"
.br
.ti -1c
.RI "#define \fB__VECTOR_TABLE\fP   __Vectors"
.br
.ti -1c
.RI "#define \fB__VECTOR_TABLE_ATTRIBUTE\fP   \fB__attribute__\fP((used, section('RESET')))"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_OUT_REG\fP(r)"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_USE_REG\fP(r)"
.br
.ti -1c
.RI "#define \fB__NOP\fP   __builtin_arm_nop"
.br
.RI "No Operation\&. "
.ti -1c
.RI "#define \fB__WFI\fP   __builtin_arm_wfi"
.br
.RI "Wait For Interrupt\&. "
.ti -1c
.RI "#define \fB__WFE\fP   __builtin_arm_wfe"
.br
.RI "Wait For Event\&. "
.ti -1c
.RI "#define \fB__SEV\fP   __builtin_arm_sev"
.br
.RI "Send Event\&. "
.ti -1c
.RI "#define \fB__ISB\fP()"
.br
.RI "Instruction Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DSB\fP()"
.br
.RI "Data Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DMB\fP()"
.br
.RI "Data Memory Barrier\&. "
.ti -1c
.RI "#define \fB__REV\fP(value)"
.br
.RI "Reverse byte order (32 bit) "
.ti -1c
.RI "#define \fB__REV16\fP(value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "#define \fB__REVSH\fP(value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "#define \fB__BKPT\fP(value)"
.br
.RI "Breakpoint\&. "
.ti -1c
.RI "#define \fB__RBIT\fP   __builtin_arm_rbit"
.br
.RI "Reverse bit order of value\&. "
.ti -1c
.RI "#define \fB__get_FPSCR\fP()"
.br
.RI "Get FPSCR\&. "
.ti -1c
.RI "#define \fB__set_FPSCR\fP(x)"
.br
.RI "Set FPSCR\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fB__attribute__\fP ((packed)) T_UINT32"
.br
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__ROR\fP (uint32_t op1, uint32_t op2)"
.br
.RI "Rotate Right in unsigned value (32 bit) "
.ti -1c
.RI "__STATIC_FORCEINLINE uint8_t \fB__CLZ\fP (uint32_t value)"
.br
.RI "Count leading zeros\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE int32_t \fB__SSAT\fP (int32_t val, uint32_t sat)"
.br
.RI "Signed Saturate\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE uint32_t \fB__USAT\fP (int32_t val, uint32_t sat)"
.br
.RI "Unsigned Saturate\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__enable_irq\fP (void)"
.br
.RI "Enable IRQ \fBInterrupts\fP\&. "
.ti -1c
.RI "__STATIC_FORCEINLINE void \fB__disable_irq\fP (void)"
.br
.RI "Disable IRQ \fBInterrupts\fP\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_CONTROL\fP (void)"
.br
.RI "Enable IRQ \fBInterrupts\fP\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_CONTROL\fP (uint32_t control)"
.br
.RI "Set Control Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_IPSR\fP (void)"
.br
.RI "Get IPSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_APSR\fP (void)"
.br
.RI "Get APSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_xPSR\fP (void)"
.br
.RI "Get xPSR Register\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_PSP\fP (void)"
.br
.RI "Get Process Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_PSP\fP (uint32_t topOfProcStack)"
.br
.RI "Set Process Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_MSP\fP (void)"
.br
.RI "Get Main Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_MSP\fP (uint32_t topOfMainStack)"
.br
.RI "Set Main Stack Pointer\&. "
.ti -1c
.RI "__STATIC_INLINE uint32_t \fB__get_PRIMASK\fP (void)"
.br
.RI "Get Priority Mask\&. "
.ti -1c
.RI "__STATIC_INLINE void \fB__set_PRIMASK\fP (uint32_t priMask)"
.br
.RI "Set Priority Mask\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT16_WRITE\fP { uint16_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT16_READ\fP { uint16_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT32_WRITE\fP { uint32_t v"
.br
.ti -1c
.RI "__PACKED_STRUCT \fBT_UINT32_READ\fP { uint32_t v"
.br
.in -1c
.SH "Detailed Description"
.PP 
CMSIS compiler armclang (Arm Compiler 6) header file\&. 


.PP
\fBVersion\fP
.RS 4
V1\&.5\&.3 
.RE
.PP
\fBDate\fP
.RS 4
27\&. May 2021 
.RE
.PP

.PP
Definition in file \fBcmsis_armclang_ltm\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define __ALIGNED( x)"
\fBValue:\fP
.nf
__attribute__((aligned(x)))
.PP
.fi

.PP
Definition at line \fB104\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __ASM   __asm"

.PP
Definition at line \fB34\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __COMPILER_BARRIER()"
\fBValue:\fP
.nf
__ASM volatile("":::"memory")
.PP
.fi

.PP
Definition at line \fB110\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __INITIAL_SP   Image$$ARM_LIB_STACK$$ZI$$Limit"

.PP
Definition at line \fB120\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __INLINE   __inline"

.PP
Definition at line \fB37\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __NO_RETURN   \fB__attribute__\fP((__noreturn__))"

.PP
Definition at line \fB46\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __PACKED   \fB__attribute__\fP((packed, aligned(1)))"

.PP
Definition at line \fB55\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __PACKED_STRUCT   struct \fB__attribute__\fP((packed, aligned(1)))"

.PP
Definition at line \fB58\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __PACKED_UNION   union \fB__attribute__\fP((packed, aligned(1)))"

.PP
Definition at line \fB61\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __PROGRAM_START   __main"

.PP
Definition at line \fB116\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __RESTRICT   __restrict"

.PP
Definition at line \fB107\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __STACK_LIMIT   Image$$ARM_LIB_STACK$$ZI$$Base"

.PP
Definition at line \fB124\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __STATIC_FORCEINLINE   \fB__attribute__\fP((always_inline)) static __inline"

.PP
Definition at line \fB43\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __STATIC_INLINE   static __inline"

.PP
Definition at line \fB40\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __UNALIGNED_UINT16_READ( addr)"
\fBValue:\fP
.nf
(((const struct T_UINT16_READ *)(const void *)(addr))\->v)
.PP
.fi

.PP
Definition at line \fB85\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __UNALIGNED_UINT16_WRITE( addr,  val)"
\fBValue:\fP
.nf
(void)((((struct T_UINT16_WRITE *)(void *)(addr))\->v) = (val))
.PP
.fi

.PP
Definition at line \fB77\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __UNALIGNED_UINT32( x)"
\fBValue:\fP
.nf
(((struct T_UINT32 *)(x))\->v)
.PP
.fi

.PP
Definition at line \fB69\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __UNALIGNED_UINT32_READ( addr)"
\fBValue:\fP
.nf
(((const struct T_UINT32_READ *)(const void *)(addr))\->v)
.PP
.fi

.PP
Definition at line \fB101\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __UNALIGNED_UINT32_WRITE( addr,  val)"
\fBValue:\fP
.nf
(void)((((struct T_UINT32_WRITE *)(void *)(addr))\->v) = (val))
.PP
.fi

.PP
Definition at line \fB93\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __USED   \fB__attribute__\fP((used))"

.PP
Definition at line \fB49\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __VECTOR_TABLE   __Vectors"

.PP
Definition at line \fB128\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __VECTOR_TABLE_ATTRIBUTE   \fB__attribute__\fP((used, section('RESET')))"

.PP
Definition at line \fB132\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "#define __WEAK   \fB__attribute__\fP((weak))"

.PP
Definition at line \fB52\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "struct __attribute__ ((packed) )"

.PP
Definition at line \fB1\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SH "Variable Documentation"
.PP 
.SS "__PACKED_STRUCT T_UINT16_READ { uint16_t v"

.PP
Definition at line \fB83\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "__PACKED_STRUCT T_UINT16_WRITE { uint16_t v"

.PP
Definition at line \fB75\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "__PACKED_STRUCT T_UINT32_READ { uint32_t v"

.PP
Definition at line \fB99\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SS "__PACKED_STRUCT T_UINT32_WRITE { uint32_t v"

.PP
Definition at line \fB91\fP of file \fBcmsis_armclang_ltm\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Joystick Driver from the source code\&.
