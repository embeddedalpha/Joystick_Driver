<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_group___exported__macro" xml:lang="en-US">
<title>Exported_macro</title>
<indexterm><primary>Exported_macro</primary></indexterm>
Collaboration diagram for Exported_macro:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="group___exported__macro.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga26474f43799fbade9cf300e21dd3a91a">SET_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga133aae6fc0d41bffab39ab223a7001de">CLEAR_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga822bb1bb9710d5f2fa6396b84e583c33">READ_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga1378fbdda39f40b85420df55f41460ef">CLEAR_REG</link>(REG)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga32f78bffcaf6d13023dcd7f05e0c4d57">WRITE_REG</link>(REG,  VAL)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1gae7f188a4d26c9e713a48414783421071">READ_REG</link>(REG)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga6553c99f510c3bab8cc0a91602053247">MODIFY_REG</link>(REG,  CLEARMASK,  SETMASK)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga47a8870d71d55cefb3df47cd8c815ec8">POSITION_VAL</link>(VAL)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga5daccb3b4245b833e81ff60fd1f4cf80">ATOMIC_SET_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga08dfef58d3b054b80745eda49e8907fb">ATOMIC_CLEAR_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga89dc36b64605a58fd1666d76b51bde1c">ATOMIC_MODIFY_REG</link>(REG,  CLEARMSK,  SETMASK)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga567c489b25ec989c6ffcda6e1a49c4c2">ATOMIC_SETH_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga72150176ac8514f3a9f71b354d344661">ATOMIC_CLEARH_BIT</link>(REG,  BIT)</para>
</listitem>
            <listitem><para>#define <link linkend="_group___exported__macro_1ga8774e17ec273484ebb30efd3f9307f3a">ATOMIC_MODIFYH_REG</link>(REG,  CLEARMSK,  SETMASK)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_group___exported__macro_1ga08dfef58d3b054b80745eda49e8907fb"/><section>
    <title>ATOMIC_CLEAR_BIT</title>
<indexterm><primary>ATOMIC_CLEAR_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_CLEAR_BIT</secondary></indexterm>
<para><computeroutput>#define ATOMIC_CLEAR_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXW((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(BIT);&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXW(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00238">238</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga72150176ac8514f3a9f71b354d344661"/><section>
    <title>ATOMIC_CLEARH_BIT</title>
<indexterm><primary>ATOMIC_CLEARH_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_CLEARH_BIT</secondary></indexterm>
<para><computeroutput>#define ATOMIC_CLEARH_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXH((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(BIT);&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXH(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00265">265</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga89dc36b64605a58fd1666d76b51bde1c"/><section>
    <title>ATOMIC_MODIFY_REG</title>
<indexterm><primary>ATOMIC_MODIFY_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_MODIFY_REG</secondary></indexterm>
<para><computeroutput>#define ATOMIC_MODIFY_REG( REG,  CLEARMSK,  SETMASK)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;(__LDREXW((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(CLEARMSK))&#32;|&#32;(SETMASK);&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXW(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00247">247</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga8774e17ec273484ebb30efd3f9307f3a"/><section>
    <title>ATOMIC_MODIFYH_REG</title>
<indexterm><primary>ATOMIC_MODIFYH_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_MODIFYH_REG</secondary></indexterm>
<para><computeroutput>#define ATOMIC_MODIFYH_REG( REG,  CLEARMSK,  SETMASK)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;(__LDREXH((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(CLEARMSK))&#32;|&#32;(SETMASK);&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXH(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00274">274</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga5daccb3b4245b833e81ff60fd1f4cf80"/><section>
    <title>ATOMIC_SET_BIT</title>
<indexterm><primary>ATOMIC_SET_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_SET_BIT</secondary></indexterm>
<para><computeroutput>#define ATOMIC_SET_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXW((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG))&#32;|&#32;(BIT);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXW(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00229">229</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga567c489b25ec989c6ffcda6e1a49c4c2"/><section>
    <title>ATOMIC_SETH_BIT</title>
<indexterm><primary>ATOMIC_SETH_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>ATOMIC_SETH_BIT</secondary></indexterm>
<para><computeroutput>#define ATOMIC_SETH_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXH((<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG))&#32;|&#32;(BIT);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((__STREXH(val,(<link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link>&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\
&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00256">256</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga133aae6fc0d41bffab39ab223a7001de"/><section>
    <title>CLEAR_BIT</title>
<indexterm><primary>CLEAR_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>CLEAR_BIT</secondary></indexterm>
<para><computeroutput>#define CLEAR_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG)&#32;&amp;=&#32;~(BIT))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00213">213</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga1378fbdda39f40b85420df55f41460ef"/><section>
    <title>CLEAR_REG</title>
<indexterm><primary>CLEAR_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>CLEAR_REG</secondary></indexterm>
<para><computeroutput>#define CLEAR_REG( REG)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG)&#32;=&#32;(0x0))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00217">217</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga6553c99f510c3bab8cc0a91602053247"/><section>
    <title>MODIFY_REG</title>
<indexterm><primary>MODIFY_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>MODIFY_REG</secondary></indexterm>
<para><computeroutput>#define MODIFY_REG( REG,  CLEARMASK,  SETMASK)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">WRITE_REG((REG),&#32;(((READ_REG(REG))&#32;&amp;&#32;(~(CLEARMASK)))&#32;|&#32;(SETMASK)))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00223">223</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga47a8870d71d55cefb3df47cd8c815ec8"/><section>
    <title>POSITION_VAL</title>
<indexterm><primary>POSITION_VAL</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>POSITION_VAL</secondary></indexterm>
<para><computeroutput>#define POSITION_VAL( VAL)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">(<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</link>(<link linkend="_group___c_m_s_i_s___core___instruction_interface_1gab83768933a612816fad669db5488366f">__RBIT</link>(VAL)))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00225">225</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga822bb1bb9710d5f2fa6396b84e583c33"/><section>
    <title>READ_BIT</title>
<indexterm><primary>READ_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>READ_BIT</secondary></indexterm>
<para><computeroutput>#define READ_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG)&#32;&amp;&#32;(BIT))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00215">215</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1gae7f188a4d26c9e713a48414783421071"/><section>
    <title>READ_REG</title>
<indexterm><primary>READ_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>READ_REG</secondary></indexterm>
<para><computeroutput>#define READ_REG( REG)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00221">221</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga26474f43799fbade9cf300e21dd3a91a"/><section>
    <title>SET_BIT</title>
<indexterm><primary>SET_BIT</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>SET_BIT</secondary></indexterm>
<para><computeroutput>#define SET_BIT( REG,  BIT)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG)&#32;|=&#32;(BIT))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00211">211</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
<anchor xml:id="_group___exported__macro_1ga32f78bffcaf6d13023dcd7f05e0c4d57"/><section>
    <title>WRITE_REG</title>
<indexterm><primary>WRITE_REG</primary><secondary>Exported_macro</secondary></indexterm>
<indexterm><primary>Exported_macro</primary><secondary>WRITE_REG</secondary></indexterm>
<para><computeroutput>#define WRITE_REG( REG,  VAL)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">((REG)&#32;=&#32;(VAL))
</programlisting><para>
Definition at line <link linkend="_stm32f4xx_8h_source_1l00219">219</link> of file <link linkend="_stm32f4xx_8h_source">stm32f4xx.h</link>.</para>
</section>
</section>
</section>
