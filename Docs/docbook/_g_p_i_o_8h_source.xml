<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g_p_i_o_8h_source" xml:lang="en-US">
<title>GPIO.h</title>
<indexterm><primary>GPIO/GPIO.h</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__g_p_i_o_8h_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;GPIO.h</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;&#32;Created&#32;on:&#32;Nov&#32;2,&#32;2021</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;Author:&#32;Kunal</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00007"/>00007 
<anchor xml:id="__g_p_i_o_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#ifndef&#32;GPIO_GPIO_H_</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#define&#32;GPIO_GPIO_H_</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00010"/>00010 
<anchor xml:id="__g_p_i_o_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;main.h&quot;</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;GPIO_Defs.h&quot;</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00013"/>00013 
<anchor xml:id="__g_p_i_o_8h_source_1l00014"/>00014 
<anchor xml:id="__g_p_i_o_8h_source_1l00015"/><link linkend="_struct_g_p_i_o___pin">00015</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_g_p_i_o___pin">GPIO_Pin</link>
<anchor xml:id="__g_p_i_o_8h_source_1l00016"/>00016 {
<anchor xml:id="__g_p_i_o_8h_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Access;&#32;<emphasis role="comment">//Enabl&#32;or&#32;Disable</emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00018"/>00018 &#32;&#32;&#32;&#32;uint16_t&#32;Pin_numer;
<anchor xml:id="__g_p_i_o_8h_source_1l00019"/>00019 }<link linkend="_struct_g_p_i_o___pin">GPIO_Pin</link>;
<anchor xml:id="__g_p_i_o_8h_source_1l00020"/>00020 
<anchor xml:id="__g_p_i_o_8h_source_1l00026"/>00026 __STATIC_INLINE&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GPIO_Pin_Low(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pin)
<anchor xml:id="__g_p_i_o_8h_source_1l00027"/>00027 {
<anchor xml:id="__g_p_i_o_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;Port&#32;-&gt;&#32;ODR&#32;&amp;=&#32;~(1&#32;&lt;&lt;&#32;pin);
<anchor xml:id="__g_p_i_o_8h_source_1l00029"/>00029 }
<anchor xml:id="__g_p_i_o_8h_source_1l00030"/>00030 
<anchor xml:id="__g_p_i_o_8h_source_1l00036"/>00036 __STATIC_INLINE&#32;&#32;uint16_t&#32;GPIO_Port_Read(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port)
<anchor xml:id="__g_p_i_o_8h_source_1l00037"/>00037 {
<anchor xml:id="__g_p_i_o_8h_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Port&#32;-&gt;&#32;IDR;
<anchor xml:id="__g_p_i_o_8h_source_1l00039"/>00039 }
<anchor xml:id="__g_p_i_o_8h_source_1l00040"/>00040 
<anchor xml:id="__g_p_i_o_8h_source_1l00046"/>00046 __STATIC_INLINE&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GPIO_Write_Port(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port,&#32;uint16_t&#32;data)
<anchor xml:id="__g_p_i_o_8h_source_1l00047"/>00047 {
<anchor xml:id="__g_p_i_o_8h_source_1l00048"/>00048 &#32;&#32;&#32;&#32;Port&#32;-&gt;&#32;ODR&#32;=&#32;data;
<anchor xml:id="__g_p_i_o_8h_source_1l00049"/>00049 }
<anchor xml:id="__g_p_i_o_8h_source_1l00050"/>00050 
<anchor xml:id="__g_p_i_o_8h_source_1l00057"/>00057 __STATIC_INLINE&#32;&#32;uint16_t&#32;GPIO_Read_Pin(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port,&#32;uint8_t&#32;pin)
<anchor xml:id="__g_p_i_o_8h_source_1l00058"/>00058 {
<anchor xml:id="__g_p_i_o_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Port-&gt;<link linkend="_struct_g_p_i_o___type_def_1a328d2fe9ef1d513c3a97d30f98f0047c">IDR</link>&#32;&amp;&#32;(1&lt;&lt;pin))&#32;&gt;&gt;&#32;pin;
<anchor xml:id="__g_p_i_o_8h_source_1l00060"/>00060 }
<anchor xml:id="__g_p_i_o_8h_source_1l00061"/>00061 
<anchor xml:id="__g_p_i_o_8h_source_1l00062"/>00062 
<anchor xml:id="__g_p_i_o_8h_source_1l00068"/>00068 __STATIC_INLINE&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GPIO_Pin_High(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pin)
<anchor xml:id="__g_p_i_o_8h_source_1l00069"/>00069 {
<anchor xml:id="__g_p_i_o_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;Port&#32;-&gt;&#32;ODR&#32;|=&#32;1&#32;&lt;&lt;&#32;pin;
<anchor xml:id="__g_p_i_o_8h_source_1l00071"/>00071 }
<anchor xml:id="__g_p_i_o_8h_source_1l00072"/>00072 
<anchor xml:id="__g_p_i_o_8h_source_1l00073"/>00073 
<anchor xml:id="__g_p_i_o_8h_source_1l00074"/>00074 
<anchor xml:id="__g_p_i_o_8h_source_1l00080"/>00080 <emphasis role="keywordtype">int</emphasis>&#32;GPIO_Clock_Disable(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*PORT);
<anchor xml:id="__g_p_i_o_8h_source_1l00081"/>00081 
<anchor xml:id="__g_p_i_o_8h_source_1l00087"/>00087 <emphasis role="keywordtype">int</emphasis>&#32;GPIO_Clock_Enable(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*PORT);
<anchor xml:id="__g_p_i_o_8h_source_1l00088"/>00088 
<anchor xml:id="__g_p_i_o_8h_source_1l00099"/>00099 <emphasis role="keywordtype">void</emphasis>&#32;GPIO_Pin_Init(<link linkend="_struct_g_p_i_o___type_def">GPIO_TypeDef</link>&#32;*Port,&#32;uint8_t&#32;pin,&#32;uint8_t&#32;mode,&#32;uint8_t&#32;output_type,&#32;uint8_t&#32;speed,&#32;uint8_t&#32;pull,&#32;uint8_t&#32;alternate_function);
<anchor xml:id="__g_p_i_o_8h_source_1l00100"/>00100 
<anchor xml:id="__g_p_i_o_8h_source_1l00101"/>00101 
<anchor xml:id="__g_p_i_o_8h_source_1l00108"/>00108 <emphasis role="keywordtype">void</emphasis>&#32;GPIO_Interrupt_Setup(<emphasis role="keywordtype">int</emphasis>&#32;pin,&#32;<emphasis role="keywordtype">int</emphasis>&#32;edge_select,&#32;uint32_t&#32;priority);
<anchor xml:id="__g_p_i_o_8h_source_1l00109"/>00109 
<anchor xml:id="__g_p_i_o_8h_source_1l00110"/>00110 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;GPIO_GPIO_H_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="__g_p_i_o_8h_source_1l00111"/>00111 
<anchor xml:id="__g_p_i_o_8h_source_1l00112"/>00112 
<anchor xml:id="__g_p_i_o_8h_source_1l00113"/>00113 
<anchor xml:id="__g_p_i_o_8h_source_1l00114"/>00114 
<anchor xml:id="__g_p_i_o_8h_source_1l00115"/>00115 
<anchor xml:id="__g_p_i_o_8h_source_1l00116"/>00116 
<anchor xml:id="__g_p_i_o_8h_source_1l00117"/>00117 
<anchor xml:id="__g_p_i_o_8h_source_1l00118"/>00118 
<anchor xml:id="__g_p_i_o_8h_source_1l00119"/>00119 
</programlisting></section>
