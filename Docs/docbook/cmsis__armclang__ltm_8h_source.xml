<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_cmsis__armclang__ltm_8h_source" xml:lang="en-US">
<title>cmsis_armclang_ltm.h</title>
<indexterm><primary>Inc/cmsis_armclang_ltm.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00001"/>00001 <emphasis role="comment">/**************************************************************************/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00007"/>00007 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00008"/>00008 <emphasis role="comment">&#32;*&#32;Copyright&#32;(c)&#32;2018-2021&#32;Arm&#32;Limited.&#32;All&#32;rights&#32;reserved.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00009"/>00009 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00010"/>00010 <emphasis role="comment">&#32;*&#32;SPDX-License-Identifier:&#32;Apache-2.0</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00011"/>00011 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00012"/>00012 <emphasis role="comment">&#32;*&#32;Licensed&#32;under&#32;the&#32;Apache&#32;License,&#32;Version&#32;2.0&#32;(the&#32;License);&#32;you&#32;may</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00013"/>00013 <emphasis role="comment">&#32;*&#32;not&#32;use&#32;this&#32;file&#32;except&#32;in&#32;compliance&#32;with&#32;the&#32;License.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00014"/>00014 <emphasis role="comment">&#32;*&#32;You&#32;may&#32;obtain&#32;a&#32;copy&#32;of&#32;the&#32;License&#32;at</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00015"/>00015 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;www.apache.org/licenses/LICENSE-2.0</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00017"/>00017 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00018"/>00018 <emphasis role="comment">&#32;*&#32;Unless&#32;required&#32;by&#32;applicable&#32;law&#32;or&#32;agreed&#32;to&#32;in&#32;writing,&#32;software</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00019"/>00019 <emphasis role="comment">&#32;*&#32;distributed&#32;under&#32;the&#32;License&#32;is&#32;distributed&#32;on&#32;an&#32;AS&#32;IS&#32;BASIS,&#32;WITHOUT</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00020"/>00020 <emphasis role="comment">&#32;*&#32;WARRANTIES&#32;OR&#32;CONDITIONS&#32;OF&#32;ANY&#32;KIND,&#32;either&#32;express&#32;or&#32;implied.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00021"/>00021 <emphasis role="comment">&#32;*&#32;See&#32;the&#32;License&#32;for&#32;the&#32;specific&#32;language&#32;governing&#32;permissions&#32;and</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00022"/>00022 <emphasis role="comment">&#32;*&#32;limitations&#32;under&#32;the&#32;License.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00023"/>00023 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00024"/>00024 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00025"/>00025 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;IRQn)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;IRQn&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00026"/>00026 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00027"/>00027 <emphasis role="preprocessor">#ifndef&#32;__CMSIS_ARMCLANG_H</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00028"/>00028 <emphasis role="preprocessor">#define&#32;__CMSIS_ARMCLANG_H</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00029"/>00029 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00030"/>00030 <emphasis role="preprocessor">#pragma&#32;clang&#32;system_header&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;treat&#32;file&#32;as&#32;system&#32;include&#32;file&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00031"/>00031 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00032"/>00032 <emphasis role="comment">/*&#32;CMSIS&#32;compiler&#32;specific&#32;defines&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00033"/>00033 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__ASM</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00034"/>00034 <emphasis role="preprocessor">&#32;&#32;#define&#32;__ASM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__asm</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00035"/>00035 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__INLINE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00037"/>00037 <emphasis role="preprocessor">&#32;&#32;#define&#32;__INLINE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__inline</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00039"/>00039 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__STATIC_INLINE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00040"/>00040 <emphasis role="preprocessor">&#32;&#32;#define&#32;__STATIC_INLINE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;static&#32;__inline</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00041"/>00041 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00042"/>00042 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__STATIC_FORCEINLINE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00043"/>00043 <emphasis role="preprocessor">&#32;&#32;#define&#32;__STATIC_FORCEINLINE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((always_inline))&#32;static&#32;__inline</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00044"/>00044 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00045"/>00045 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__NO_RETURN</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00046"/>00046 <emphasis role="preprocessor">&#32;&#32;#define&#32;__NO_RETURN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((__noreturn__))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00047"/>00047 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00048"/>00048 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__USED</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00049"/>00049 <emphasis role="preprocessor">&#32;&#32;#define&#32;__USED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((used))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00050"/>00050 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00051"/>00051 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__WEAK</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00052"/>00052 <emphasis role="preprocessor">&#32;&#32;#define&#32;__WEAK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((weak))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00053"/>00053 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00054"/>00054 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__PACKED</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00055"/>00055 <emphasis role="preprocessor">&#32;&#32;#define&#32;__PACKED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((packed,&#32;aligned(1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00056"/>00056 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00057"/>00057 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__PACKED_STRUCT</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;#define&#32;__PACKED_STRUCT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;struct&#32;__attribute__((packed,&#32;aligned(1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00059"/>00059 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00060"/>00060 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__PACKED_UNION</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00061"/>00061 <emphasis role="preprocessor">&#32;&#32;#define&#32;__PACKED_UNION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;union&#32;__attribute__((packed,&#32;aligned(1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00062"/>00062 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00063"/>00063 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__UNALIGNED_UINT32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;deprecated&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00064"/>00064 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;push</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00065"/>00065 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;ignored&#32;&quot;-Wpacked&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00066"/>00066 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;T_UINT32)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;T_UINT32&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00067"/>00067 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gae84a2733711339c5eefeb0d899506b96">__attribute__</link>((packed))&#32;T_UINT32&#32;{&#32;uint32_t&#32;v;&#32;};
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00068"/>00068 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;pop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00069"/>00069 <emphasis role="preprocessor">&#32;&#32;#define&#32;__UNALIGNED_UINT32(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((struct&#32;T_UINT32&#32;*)(x))-&gt;v)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00070"/>00070 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00071"/>00071 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__UNALIGNED_UINT16_WRITE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00072"/>00072 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;push</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00073"/>00073 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;ignored&#32;&quot;-Wpacked&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00074"/>00074 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;T_UINT16_WRITE)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;T_UINT16_WRITE&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00075"/>00075 &#32;&#32;__PACKED_STRUCT&#32;T_UINT16_WRITE&#32;{&#32;uint16_t&#32;v;&#32;};
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00076"/>00076 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;pop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00077"/>00077 <emphasis role="preprocessor">&#32;&#32;#define&#32;__UNALIGNED_UINT16_WRITE(addr,&#32;val)&#32;&#32;&#32;&#32;(void)((((struct&#32;T_UINT16_WRITE&#32;*)(void&#32;*)(addr))-&gt;v)&#32;=&#32;(val))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00078"/>00078 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00079"/>00079 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__UNALIGNED_UINT16_READ</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00080"/>00080 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;push</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00081"/>00081 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;ignored&#32;&quot;-Wpacked&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00082"/>00082 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;T_UINT16_READ)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;T_UINT16_READ&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00083"/>00083 &#32;&#32;__PACKED_STRUCT&#32;T_UINT16_READ&#32;{&#32;uint16_t&#32;v;&#32;};
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00084"/>00084 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;pop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00085"/>00085 <emphasis role="preprocessor">&#32;&#32;#define&#32;__UNALIGNED_UINT16_READ(addr)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((const&#32;struct&#32;T_UINT16_READ&#32;*)(const&#32;void&#32;*)(addr))-&gt;v)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00086"/>00086 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00087"/>00087 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__UNALIGNED_UINT32_WRITE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00088"/>00088 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;push</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00089"/>00089 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;ignored&#32;&quot;-Wpacked&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00090"/>00090 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;T_UINT32_WRITE)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;T_UINT32_WRITE&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00091"/>00091 &#32;&#32;__PACKED_STRUCT&#32;T_UINT32_WRITE&#32;{&#32;uint32_t&#32;v;&#32;};
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00092"/>00092 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;pop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00093"/>00093 <emphasis role="preprocessor">&#32;&#32;#define&#32;__UNALIGNED_UINT32_WRITE(addr,&#32;val)&#32;&#32;&#32;&#32;(void)((((struct&#32;T_UINT32_WRITE&#32;*)(void&#32;*)(addr))-&gt;v)&#32;=&#32;(val))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00094"/>00094 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00095"/>00095 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__UNALIGNED_UINT32_READ</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00096"/>00096 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;push</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00097"/>00097 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;ignored&#32;&quot;-Wpacked&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00098"/>00098 <emphasis role="comment">/*lint&#32;-esym(9058,&#32;T_UINT32_READ)*/</emphasis>&#32;<emphasis role="comment">/*&#32;disable&#32;MISRA&#32;2012&#32;Rule&#32;2.4&#32;for&#32;T_UINT32_READ&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00099"/>00099 &#32;&#32;__PACKED_STRUCT&#32;T_UINT32_READ&#32;{&#32;uint32_t&#32;v;&#32;};
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00100"/>00100 <emphasis role="preprocessor">&#32;&#32;#pragma&#32;clang&#32;diagnostic&#32;pop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00101"/>00101 <emphasis role="preprocessor">&#32;&#32;#define&#32;__UNALIGNED_UINT32_READ(addr)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(((const&#32;struct&#32;T_UINT32_READ&#32;*)(const&#32;void&#32;*)(addr))-&gt;v)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00102"/>00102 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00103"/>00103 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__ALIGNED</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00104"/>00104 <emphasis role="preprocessor">&#32;&#32;#define&#32;__ALIGNED(x)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__attribute__((aligned(x)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00105"/>00105 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00106"/>00106 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__RESTRICT</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00107"/>00107 <emphasis role="preprocessor">&#32;&#32;#define&#32;__RESTRICT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__restrict</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00108"/>00108 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00109"/>00109 <emphasis role="preprocessor">#ifndef&#32;&#32;&#32;__COMPILER_BARRIER</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00110"/>00110 <emphasis role="preprocessor">&#32;&#32;#define&#32;__COMPILER_BARRIER()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__ASM&#32;volatile(&quot;&quot;:::&quot;memory&quot;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00111"/>00111 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00112"/>00112 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00113"/>00113 <emphasis role="comment">/*&#32;#########################&#32;&#32;Startup&#32;and&#32;Lowlevel&#32;Init&#32;&#32;########################&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00114"/>00114 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00115"/>00115 <emphasis role="preprocessor">#ifndef&#32;__PROGRAM_START</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00116"/>00116 <emphasis role="preprocessor">#define&#32;__PROGRAM_START&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__main</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00117"/>00117 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00118"/>00118 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00119"/>00119 <emphasis role="preprocessor">#ifndef&#32;__INITIAL_SP</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00120"/>00120 <emphasis role="preprocessor">#define&#32;__INITIAL_SP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image$$ARM_LIB_STACK$$ZI$$Limit</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00121"/>00121 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00122"/>00122 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00123"/>00123 <emphasis role="preprocessor">#ifndef&#32;__STACK_LIMIT</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00124"/>00124 <emphasis role="preprocessor">#define&#32;__STACK_LIMIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image$$ARM_LIB_STACK$$ZI$$Base</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00125"/>00125 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00126"/>00126 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00127"/>00127 <emphasis role="preprocessor">#ifndef&#32;__VECTOR_TABLE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00128"/>00128 <emphasis role="preprocessor">#define&#32;__VECTOR_TABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__Vectors</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00129"/>00129 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00130"/>00130 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00131"/>00131 <emphasis role="preprocessor">#ifndef&#32;__VECTOR_TABLE_ATTRIBUTE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00132"/>00132 <emphasis role="preprocessor">#define&#32;__VECTOR_TABLE_ATTRIBUTE&#32;&#32;__attribute__((used,&#32;section(&quot;RESET&quot;)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00133"/>00133 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00134"/>00134 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00135"/>00135 <emphasis role="preprocessor">#if&#32;defined&#32;(__ARM_FEATURE_CMSE)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3U)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00136"/>00136 <emphasis role="preprocessor">#ifndef&#32;__STACK_SEAL</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00137"/>00137 <emphasis role="preprocessor">#define&#32;__STACK_SEAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Image$$STACKSEAL$$ZI$$Base</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00138"/>00138 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00139"/>00139 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00140"/>00140 <emphasis role="preprocessor">#ifndef&#32;__TZ_STACK_SEAL_SIZE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00141"/>00141 <emphasis role="preprocessor">#define&#32;__TZ_STACK_SEAL_SIZE&#32;&#32;&#32;&#32;&#32;&#32;8U</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00142"/>00142 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00143"/>00143 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00144"/>00144 <emphasis role="preprocessor">#ifndef&#32;__TZ_STACK_SEAL_VALUE</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00145"/>00145 <emphasis role="preprocessor">#define&#32;__TZ_STACK_SEAL_VALUE&#32;&#32;&#32;&#32;&#32;0xFEF5EDA5FEF5EDA5ULL</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00146"/>00146 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00147"/>00147 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00148"/>00148 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00149"/>00149 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_STACKSEAL_S&#32;(uint32_t*&#32;stackTop)&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00150"/>00150 &#32;&#32;*((uint64_t&#32;*)stackTop)&#32;=&#32;__TZ_STACK_SEAL_VALUE;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00151"/>00151 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00152"/>00152 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00153"/>00153 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00154"/>00154 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00155"/>00155 <emphasis role="comment">/*&#32;##########################&#32;&#32;Core&#32;Instruction&#32;Access&#32;&#32;#########################&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00161"/>00161 <emphasis role="comment">/*&#32;Define&#32;macros&#32;for&#32;porting&#32;to&#32;both&#32;thumb1&#32;and&#32;thumb2.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00162"/>00162 <emphasis role="comment">&#32;*&#32;For&#32;thumb1,&#32;use&#32;low&#32;register&#32;(r0-r7),&#32;specified&#32;by&#32;constraint&#32;&quot;l&quot;</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00163"/>00163 <emphasis role="comment">&#32;*&#32;Otherwise,&#32;use&#32;general&#32;registers,&#32;specified&#32;by&#32;constraint&#32;&quot;r&quot;&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00164"/>00164 <emphasis role="preprocessor">#if&#32;defined&#32;(__thumb__)&#32;&amp;&amp;&#32;!defined&#32;(__thumb2__)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00165"/>00165 <emphasis role="preprocessor">#define&#32;__CMSIS_GCC_OUT_REG(r)&#32;&quot;=l&quot;&#32;(r)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00166"/>00166 <emphasis role="preprocessor">#define&#32;__CMSIS_GCC_USE_REG(r)&#32;&quot;l&quot;&#32;(r)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00167"/>00167 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00168"/>00168 <emphasis role="preprocessor">#define&#32;__CMSIS_GCC_OUT_REG(r)&#32;&quot;=r&quot;&#32;(r)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00169"/>00169 <emphasis role="preprocessor">#define&#32;__CMSIS_GCC_USE_REG(r)&#32;&quot;r&quot;&#32;(r)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00170"/>00170 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00171"/>00171 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00176"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gabd585ddc865fb9b7f2493af1eee1a572">00176</link> <emphasis role="preprocessor">#define&#32;__NOP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_nop</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00177"/>00177 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00182"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gad23bf2b78a9a4524157c9de0d30b7448">00182</link> <emphasis role="preprocessor">#define&#32;__WFI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_wfi</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00183"/>00183 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00184"/>00184 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00190"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaac6cc7dd4325d9cb40d3290fa5244b3d">00190</link> <emphasis role="preprocessor">#define&#32;__WFE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_wfe</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00191"/>00191 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00192"/>00192 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00197"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaab4f296d0022b4b10dc0976eb22052f9">00197</link> <emphasis role="preprocessor">#define&#32;__SEV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_sev</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00198"/>00198 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00199"/>00199 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00206"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaad233022e850a009fc6f7602be1182f6">00206</link> <emphasis role="preprocessor">#define&#32;__ISB()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_isb(0xF)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00207"/>00207 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00213"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga067d257a2b34565410acefb5afef2203">00213</link> <emphasis role="preprocessor">#define&#32;__DSB()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_dsb(0xF)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00214"/>00214 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00215"/>00215 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00221"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga671101179b5943990785f36f8c1e2269">00221</link> <emphasis role="preprocessor">#define&#32;__DMB()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_dmb(0xF)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00222"/>00222 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00223"/>00223 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00230"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaca25a02e09983da5558f5242f2f635bc">00230</link> <emphasis role="preprocessor">#define&#32;__REV(value)&#32;&#32;&#32;__builtin_bswap32(value)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00231"/>00231 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00232"/>00232 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00239"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gad35497777af37e7809271b5e6f9510ba">00239</link> <emphasis role="preprocessor">#define&#32;__REV16(value)&#32;__ROR(__REV(value),&#32;16)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00240"/>00240 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00241"/>00241 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00248"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gae580812686119c9c5cf3c11a7519a404">00248</link> <emphasis role="preprocessor">#define&#32;__REVSH(value)&#32;(int16_t)__builtin_bswap16(value)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00249"/>00249 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00250"/>00250 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00258"/>00258 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga95b9bd281ddeda378b85afdb8f2ced86">__ROR</link>(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00259"/>00259 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00260"/>00260 &#32;&#32;op2&#32;%=&#32;32U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00261"/>00261 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(op2&#32;==&#32;0U)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00262"/>00262 &#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;op1;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00264"/>00264 &#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00265"/>00265 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(op1&#32;&gt;&gt;&#32;op2)&#32;|&#32;(op1&#32;&lt;&lt;&#32;(32U&#32;-&#32;op2));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00266"/>00266 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00267"/>00267 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00268"/>00268 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00276"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga15ea6bd3c507d3e81c3b3a1258e46397">00276</link> <emphasis role="preprocessor">#define&#32;__BKPT(value)&#32;&#32;&#32;&#32;&#32;__ASM&#32;volatile&#32;(&quot;bkpt&#32;&quot;#value)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00277"/>00277 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00278"/>00278 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00285"/><link linkend="_group___c_m_s_i_s___core___instruction_interface_1gab83768933a612816fad669db5488366f">00285</link> <emphasis role="preprocessor">#define&#32;__RBIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_rbit</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00286"/>00286 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00293"/>00293 __STATIC_FORCEINLINE&#32;uint8_t&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga5d5bb1527e042be4a9fa5a33f65cc248">__CLZ</link>(uint32_t&#32;value)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00294"/>00294 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00295"/>00295 &#32;&#32;<emphasis role="comment">/*&#32;Even&#32;though&#32;__builtin_clz&#32;produces&#32;a&#32;CLZ&#32;instruction&#32;on&#32;ARM,&#32;formally</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00296"/>00296 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;__builtin_clz(0)&#32;is&#32;undefined&#32;behaviour,&#32;so&#32;handle&#32;this&#32;case&#32;specially.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00297"/>00297 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;This&#32;guarantees&#32;ARM-compatible&#32;results&#32;if&#32;happening&#32;to&#32;compile&#32;on&#32;a&#32;non-ARM</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00298"/>00298 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;target,&#32;and&#32;ensures&#32;the&#32;compiler&#32;doesn&apos;t&#32;decide&#32;to&#32;activate&#32;any</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00299"/>00299 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;optimisations&#32;using&#32;the&#32;logic&#32;&quot;value&#32;was&#32;passed&#32;to&#32;__builtin_clz,&#32;so&#32;it</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00300"/>00300 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;is&#32;non-zero&quot;.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00301"/>00301 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;ARM&#32;Compiler&#32;6.10&#32;and&#32;possibly&#32;earlier&#32;will&#32;optimise&#32;this&#32;test&#32;away,&#32;leaving&#32;a</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00302"/>00302 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;single&#32;CLZ&#32;instruction.</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00303"/>00303 <emphasis role="comment">&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00304"/>00304 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(value&#32;==&#32;0U)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00305"/>00305 &#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;32U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00307"/>00307 &#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00308"/>00308 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;__builtin_clz(value);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00309"/>00309 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00310"/>00310 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00311"/>00311 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00312"/>00312 <emphasis role="preprocessor">#if&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00313"/>00313 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00314"/>00314 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00315"/>00315 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00322"/>00322 <emphasis role="preprocessor">#define&#32;__LDREXB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)__builtin_arm_ldrex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00323"/>00323 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00324"/>00324 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00331"/>00331 <emphasis role="preprocessor">#define&#32;__LDREXH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint16_t)__builtin_arm_ldrex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00332"/>00332 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00333"/>00333 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00340"/>00340 <emphasis role="preprocessor">#define&#32;__LDREXW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_ldrex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00341"/>00341 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00342"/>00342 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00351"/>00351 <emphasis role="preprocessor">#define&#32;__STREXB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_strex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00352"/>00352 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00353"/>00353 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00362"/>00362 <emphasis role="preprocessor">#define&#32;__STREXH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_strex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00363"/>00363 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00364"/>00364 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00373"/>00373 <emphasis role="preprocessor">#define&#32;__STREXW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_strex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00374"/>00374 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00375"/>00375 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00380"/>00380 <emphasis role="preprocessor">#define&#32;__CLREX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_clrex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00381"/>00381 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00382"/>00382 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00383"/>00383 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00384"/>00384 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00385"/>00385 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00386"/>00386 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00387"/>00387 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00388"/>00388 <emphasis role="preprocessor">#if&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00389"/>00389 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00390"/>00390 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00391"/>00391 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00399"/>00399 <emphasis role="preprocessor">#define&#32;__SSAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_ssat</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00400"/>00400 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00401"/>00401 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00409"/>00409 <emphasis role="preprocessor">#define&#32;__USAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_usat</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00410"/>00410 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00411"/>00411 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00419"/>00419 __STATIC_FORCEINLINE&#32;uint32_t&#32;__RRX(uint32_t&#32;value)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00420"/>00420 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00421"/>00421 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00422"/>00422 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00423"/>00423 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;rrx&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;__CMSIS_GCC_OUT_REG&#32;(result)&#32;:&#32;__CMSIS_GCC_USE_REG&#32;(value)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00424"/>00424 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00425"/>00425 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00426"/>00426 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00427"/>00427 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00434"/>00434 __STATIC_FORCEINLINE&#32;uint8_t&#32;__LDRBT(<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00435"/>00435 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00436"/>00436 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00437"/>00437 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00438"/>00438 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ldrbt&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00439"/>00439 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((uint8_t)&#32;result);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;explicit&#32;type&#32;cast&#32;here&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00440"/>00440 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00441"/>00441 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00442"/>00442 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00449"/>00449 __STATIC_FORCEINLINE&#32;uint16_t&#32;__LDRHT(<emphasis role="keyword">volatile</emphasis>&#32;uint16_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00450"/>00450 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00451"/>00451 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00452"/>00452 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00453"/>00453 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ldrht&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00454"/>00454 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((uint16_t)&#32;result);&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Add&#32;explicit&#32;type&#32;cast&#32;here&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00455"/>00455 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00456"/>00456 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00457"/>00457 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00464"/>00464 __STATIC_FORCEINLINE&#32;uint32_t&#32;__LDRT(<emphasis role="keyword">volatile</emphasis>&#32;uint32_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00465"/>00465 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00466"/>00466 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00467"/>00467 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00468"/>00468 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ldrt&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00469"/>00469 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00470"/>00470 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00471"/>00471 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00472"/>00472 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00479"/>00479 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STRBT(uint8_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00480"/>00480 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00481"/>00481 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;strbt&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;((uint32_t)value)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00482"/>00482 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00483"/>00483 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00484"/>00484 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00491"/>00491 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STRHT(uint16_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint16_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00492"/>00492 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00493"/>00493 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;strht&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;((uint32_t)value)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00494"/>00494 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00495"/>00495 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00496"/>00496 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00503"/>00503 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STRT(uint32_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint32_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00504"/>00504 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00505"/>00505 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;strt&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(value)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00506"/>00506 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00507"/>00507 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00508"/>00508 <emphasis role="preprocessor">#else&#32;&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00509"/>00509 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00510"/>00510 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00511"/>00511 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00519"/>00519 __STATIC_FORCEINLINE&#32;int32_t&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga372c0535573dde3e37f0f08c774a3487">__SSAT</link>(int32_t&#32;val,&#32;uint32_t&#32;sat)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00520"/>00520 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00521"/>00521 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((sat&#32;&gt;=&#32;1U)&#32;&amp;&amp;&#32;(sat&#32;&lt;=&#32;32U))
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00522"/>00522 &#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00523"/>00523 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int32_t&#32;max&#32;=&#32;(int32_t)((1U&#32;&lt;&lt;&#32;(sat&#32;-&#32;1U))&#32;-&#32;1U);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00524"/>00524 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;int32_t&#32;min&#32;=&#32;-1&#32;-&#32;max&#32;;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00525"/>00525 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&gt;&#32;max)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00526"/>00526 &#32;&#32;&#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00528"/>00528 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00529"/>00529 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&lt;&#32;min)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00530"/>00530 &#32;&#32;&#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;min;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00532"/>00532 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00533"/>00533 &#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00534"/>00534 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;val;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00535"/>00535 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00536"/>00536 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00544"/>00544 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1ga6562dbd8182d1571e22dbca7ebdfa9bc">__USAT</link>(int32_t&#32;val,&#32;uint32_t&#32;sat)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00545"/>00545 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00546"/>00546 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sat&#32;&lt;=&#32;31U)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00547"/>00547 &#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00548"/>00548 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;max&#32;=&#32;((1U&#32;&lt;&lt;&#32;sat)&#32;-&#32;1U);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00549"/>00549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&gt;&#32;(int32_t)max)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00550"/>00550 &#32;&#32;&#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;max;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00552"/>00552 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00553"/>00553 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(val&#32;&lt;&#32;0)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00554"/>00554 &#32;&#32;&#32;&#32;{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00556"/>00556 &#32;&#32;&#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00557"/>00557 &#32;&#32;}
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00558"/>00558 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(uint32_t)val;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00559"/>00559 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00560"/>00560 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00561"/>00561 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00562"/>00562 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00563"/>00563 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00564"/>00564 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00565"/>00565 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00566"/>00566 <emphasis role="preprocessor">#if&#32;((defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00567"/>00567 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00574"/>00574 __STATIC_FORCEINLINE&#32;uint8_t&#32;__LDAB(<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00575"/>00575 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00576"/>00576 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00577"/>00577 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00578"/>00578 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ldab&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00579"/>00579 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((uint8_t)&#32;result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00580"/>00580 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00581"/>00581 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00582"/>00582 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00589"/>00589 __STATIC_FORCEINLINE&#32;uint16_t&#32;__LDAH(<emphasis role="keyword">volatile</emphasis>&#32;uint16_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00590"/>00590 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00591"/>00591 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00592"/>00592 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00593"/>00593 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ldah&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00594"/>00594 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((uint16_t)&#32;result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00595"/>00595 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00596"/>00596 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00597"/>00597 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00604"/>00604 __STATIC_FORCEINLINE&#32;uint32_t&#32;__LDA(<emphasis role="keyword">volatile</emphasis>&#32;uint32_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00605"/>00605 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00606"/>00606 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00607"/>00607 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00608"/>00608 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;lda&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00609"/>00609 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00610"/>00610 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00611"/>00611 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00612"/>00612 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00619"/>00619 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STLB(uint8_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint8_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00620"/>00620 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00621"/>00621 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;stlb&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;((uint32_t)value)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00622"/>00622 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00623"/>00623 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00624"/>00624 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00631"/>00631 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STLH(uint16_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint16_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00632"/>00632 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00633"/>00633 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;stlh&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;((uint32_t)value)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00634"/>00634 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00635"/>00635 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00636"/>00636 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00643"/>00643 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__STL(uint32_t&#32;value,&#32;<emphasis role="keyword">volatile</emphasis>&#32;uint32_t&#32;*ptr)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00644"/>00644 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00645"/>00645 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;stl&#32;%1,&#32;%0&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=Q&quot;</emphasis>&#32;(*ptr)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;((uint32_t)value)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00646"/>00646 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00647"/>00647 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00648"/>00648 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00655"/>00655 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__LDAEXB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint8_t)__builtin_arm_ldaex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00656"/>00656 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00657"/>00657 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00664"/>00664 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__LDAEXH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint16_t)__builtin_arm_ldaex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00665"/>00665 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00666"/>00666 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00673"/>00673 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__LDAEX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_ldaex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00674"/>00674 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00675"/>00675 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00684"/>00684 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__STLEXB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_stlex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00685"/>00685 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00686"/>00686 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00695"/>00695 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__STLEXH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_stlex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00696"/>00696 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00697"/>00697 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00706"/>00706 <emphasis role="preprocessor">#define&#32;&#32;&#32;&#32;&#32;__STLEX&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_stlex</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00707"/>00707 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00708"/>00708 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00709"/>00709 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00710"/>00710 &#32;<emphasis role="comment">/*&#32;end&#32;of&#32;group&#32;CMSIS_Core_InstructionInterface&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00712"/>00712 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00713"/>00713 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00714"/>00714 <emphasis role="comment">/*&#32;###########################&#32;&#32;Core&#32;Function&#32;Access&#32;&#32;###########################&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00725"/>00725 <emphasis role="preprocessor">#ifndef&#32;__ARM_COMPAT_H</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00726"/>00726 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga63ab98aec1a5bde0e191fb22e693f480">__enable_irq</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00727"/>00727 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00728"/>00728 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;cpsie&#32;i&quot;</emphasis>&#32;:&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00729"/>00729 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00730"/>00730 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00731"/>00731 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00732"/>00732 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00738"/>00738 <emphasis role="preprocessor">#ifndef&#32;__ARM_COMPAT_H</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00739"/>00739 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga9a8f966bf50cc372e7ac092f612efd1a">__disable_irq</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00740"/>00740 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00741"/>00741 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;cpsid&#32;i&quot;</emphasis>&#32;:&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00742"/>00742 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00743"/>00743 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00744"/>00744 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00745"/>00745 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00751"/>00751 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga7dd5c942bee32f055b90153feb950f59">__get_CONTROL</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00752"/>00752 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00753"/>00753 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00754"/>00754 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00755"/>00755 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;control&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00756"/>00756 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00757"/>00757 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00758"/>00758 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00759"/>00759 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00760"/>00760 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00766"/>00766 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_CONTROL_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00767"/>00767 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00768"/>00768 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00769"/>00769 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00770"/>00770 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;control_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00771"/>00771 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00772"/>00772 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00773"/>00773 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00774"/>00774 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00775"/>00775 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00781"/>00781 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga0102d0939d9b26c5c792be6bf5fd550f">__set_CONTROL</link>(uint32_t&#32;control)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00782"/>00782 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00783"/>00783 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;control,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(control)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00784"/>00784 &#32;&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaad233022e850a009fc6f7602be1182f6">__ISB</link>();
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00785"/>00785 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00786"/>00786 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00787"/>00787 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00788"/>00788 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00794"/>00794 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_CONTROL_NS(uint32_t&#32;control)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00795"/>00795 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00796"/>00796 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;control_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(control)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00797"/>00797 &#32;&#32;<link linkend="_group___c_m_s_i_s___core___instruction_interface_1gaad233022e850a009fc6f7602be1182f6">__ISB</link>();
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00798"/>00798 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00799"/>00799 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00800"/>00800 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00801"/>00801 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00807"/>00807 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1gaf15a71855b9d731d11de92704c82bd18">__get_IPSR</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00808"/>00808 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00809"/>00809 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00810"/>00810 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00811"/>00811 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;ipsr&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00812"/>00812 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00813"/>00813 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00814"/>00814 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00815"/>00815 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00821"/>00821 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1gadff4f1e599946e8ae96fba17b5245f04">__get_APSR</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00822"/>00822 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00823"/>00823 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00824"/>00824 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00825"/>00825 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;apsr&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00826"/>00826 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00827"/>00827 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00828"/>00828 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00829"/>00829 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00835"/>00835 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1gae0d8e20f8c3c2a502075dabcff733c05">__get_xPSR</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00836"/>00836 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00837"/>00837 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00838"/>00838 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00839"/>00839 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;xpsr&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00840"/>00840 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00841"/>00841 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00842"/>00842 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00843"/>00843 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00849"/>00849 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga826c53e30812e350c77f58aac9f42bcb">__get_PSP</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00850"/>00850 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00851"/>00851 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00852"/>00852 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00853"/>00853 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;psp&quot;</emphasis>&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00854"/>00854 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00855"/>00855 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00856"/>00856 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00857"/>00857 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00858"/>00858 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00864"/>00864 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_PSP_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00865"/>00865 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00866"/>00866 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00867"/>00867 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00868"/>00868 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;psp_ns&quot;</emphasis>&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00869"/>00869 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00870"/>00870 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00871"/>00871 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00872"/>00872 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00873"/>00873 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00879"/>00879 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga21f50fc02c3927a8ebf0bc3678c06862">__set_PSP</link>(uint32_t&#32;topOfProcStack)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00880"/>00880 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00881"/>00881 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;psp,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(topOfProcStack)&#32;:&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00882"/>00882 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00883"/>00883 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00884"/>00884 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00885"/>00885 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00891"/>00891 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_PSP_NS(uint32_t&#32;topOfProcStack)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00892"/>00892 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00893"/>00893 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;psp_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(topOfProcStack)&#32;:&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00894"/>00894 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00895"/>00895 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00896"/>00896 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00897"/>00897 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00903"/>00903 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga667e7b8b97b4a30f445ae45d37588e45">__get_MSP</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00904"/>00904 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00905"/>00905 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00906"/>00906 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00907"/>00907 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;msp&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00908"/>00908 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00909"/>00909 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00910"/>00910 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00911"/>00911 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00912"/>00912 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00918"/>00918 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_MSP_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00919"/>00919 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00920"/>00920 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00921"/>00921 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00922"/>00922 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;msp_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00923"/>00923 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00924"/>00924 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00925"/>00925 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00926"/>00926 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00927"/>00927 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00933"/>00933 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga08b66e2b60a46fada36d90d2bc1e7c9b">__set_MSP</link>(uint32_t&#32;topOfMainStack)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00934"/>00934 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00935"/>00935 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;msp,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(topOfMainStack)&#32;:&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00936"/>00936 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00937"/>00937 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00938"/>00938 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00939"/>00939 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00945"/>00945 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_MSP_NS(uint32_t&#32;topOfMainStack)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00946"/>00946 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00947"/>00947 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;msp_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(topOfMainStack)&#32;:&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00948"/>00948 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00949"/>00949 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00950"/>00950 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00951"/>00951 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00952"/>00952 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00958"/>00958 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_SP_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00959"/>00959 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00960"/>00960 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00961"/>00961 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00962"/>00962 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;sp_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00963"/>00963 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00964"/>00964 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00965"/>00965 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00966"/>00966 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00972"/>00972 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_SP_NS(uint32_t&#32;topOfStack)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00973"/>00973 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00974"/>00974 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;sp_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(topOfStack)&#32;:&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00975"/>00975 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00976"/>00976 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00977"/>00977 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00978"/>00978 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00984"/>00984 __STATIC_FORCEINLINE&#32;uint32_t&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga4ff59fb9e280d19e79e6875863a65f0a">__get_PRIMASK</link>(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00985"/>00985 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00986"/>00986 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00987"/>00987 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00988"/>00988 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;primask&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00989"/>00989 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00990"/>00990 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00991"/>00991 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00992"/>00992 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00993"/>00993 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l00999"/>00999 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_PRIMASK_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01000"/>01000 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01001"/>01001 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01002"/>01002 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01003"/>01003 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;primask_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01004"/>01004 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01005"/>01005 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01006"/>01006 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01007"/>01007 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01008"/>01008 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01014"/>01014 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1gaf4a17d3be7dbb066489836d849930d92">__set_PRIMASK</link>(uint32_t&#32;priMask)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01015"/>01015 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01016"/>01016 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;primask,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(priMask)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01017"/>01017 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01018"/>01018 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01019"/>01019 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01020"/>01020 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01026"/>01026 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_PRIMASK_NS(uint32_t&#32;priMask)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01027"/>01027 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01028"/>01028 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;primask_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(priMask)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01029"/>01029 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01030"/>01030 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01031"/>01031 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01032"/>01032 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01033"/>01033 <emphasis role="preprocessor">#if&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01034"/>01034 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01035"/>01035 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01041"/>01041 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__enable_fault_irq(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01042"/>01042 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01043"/>01043 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;cpsie&#32;f&quot;</emphasis>&#32;:&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01044"/>01044 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01045"/>01045 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01046"/>01046 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01052"/>01052 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__disable_fault_irq(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01053"/>01053 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01054"/>01054 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;cpsid&#32;f&quot;</emphasis>&#32;:&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01055"/>01055 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01056"/>01056 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01057"/>01057 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01063"/>01063 __STATIC_FORCEINLINE&#32;uint32_t&#32;__get_BASEPRI(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01064"/>01064 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01065"/>01065 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01066"/>01066 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01067"/>01067 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;basepri&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01068"/>01068 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01069"/>01069 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01070"/>01070 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01071"/>01071 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01072"/>01072 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01078"/>01078 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_BASEPRI_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01079"/>01079 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01080"/>01080 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01081"/>01081 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01082"/>01082 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;basepri_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01083"/>01083 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01084"/>01084 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01085"/>01085 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01086"/>01086 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01087"/>01087 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01093"/>01093 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__set_BASEPRI(uint32_t&#32;basePri)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01094"/>01094 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01095"/>01095 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;basepri,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(basePri)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01096"/>01096 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01097"/>01097 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01098"/>01098 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01099"/>01099 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01105"/>01105 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_BASEPRI_NS(uint32_t&#32;basePri)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01106"/>01106 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01107"/>01107 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;basepri_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(basePri)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01108"/>01108 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01109"/>01109 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01110"/>01110 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01111"/>01111 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01118"/>01118 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__set_BASEPRI_MAX(uint32_t&#32;basePri)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01119"/>01119 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01120"/>01120 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;basepri_max,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(basePri)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01121"/>01121 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01122"/>01122 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01123"/>01123 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01129"/>01129 __STATIC_FORCEINLINE&#32;uint32_t&#32;__get_FAULTMASK(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01130"/>01130 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01131"/>01131 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01132"/>01132 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01133"/>01133 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;faultmask&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01134"/>01134 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01135"/>01135 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01136"/>01136 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01137"/>01137 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01138"/>01138 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01144"/>01144 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_FAULTMASK_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01145"/>01145 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01146"/>01146 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01147"/>01147 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01148"/>01148 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;faultmask_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01149"/>01149 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01150"/>01150 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01151"/>01151 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01152"/>01152 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01153"/>01153 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01159"/>01159 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__set_FAULTMASK(uint32_t&#32;faultMask)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01160"/>01160 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01161"/>01161 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;faultmask,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(faultMask)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01162"/>01162 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01163"/>01163 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01164"/>01164 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01165"/>01165 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01171"/>01171 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_FAULTMASK_NS(uint32_t&#32;faultMask)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01172"/>01172 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01173"/>01173 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;faultmask_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(faultMask)&#32;:&#32;<emphasis role="stringliteral">&quot;memory&quot;</emphasis>);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01174"/>01174 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01175"/>01175 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01176"/>01176 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01177"/>01177 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7M__&#32;&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01178"/>01178 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_7EM__&#32;&#32;&#32;&#32;&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01179"/>01179 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01180"/>01180 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01181"/>01181 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01182"/>01182 <emphasis role="preprocessor">#if&#32;((defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01183"/>01183 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01184"/>01184 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01194"/>01194 __STATIC_FORCEINLINE&#32;uint32_t&#32;__get_PSPLIM(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01195"/>01195 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01196"/>01196 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01197"/>01197 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(!defined&#32;(__ARM_FEATURE_CMSE)&#32;||&#32;(__ARM_FEATURE_CMSE&#32;&lt;&#32;3)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01198"/>01198 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;PSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01199"/>01199 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01200"/>01200 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01201"/>01201 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01202"/>01202 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;psplim&quot;</emphasis>&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01203"/>01203 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01204"/>01204 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01205"/>01205 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01206"/>01206 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01207"/>01207 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01217"/>01217 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_PSPLIM_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01218"/>01218 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01219"/>01219 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01220"/>01220 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;PSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01221"/>01221 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01222"/>01222 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01223"/>01223 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01224"/>01224 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;psplim_ns&quot;</emphasis>&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01225"/>01225 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01226"/>01226 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01227"/>01227 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01228"/>01228 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01229"/>01229 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01230"/>01230 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01240"/>01240 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__set_PSPLIM(uint32_t&#32;ProcStackPtrLimit)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01241"/>01241 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01242"/>01242 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01243"/>01243 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(!defined&#32;(__ARM_FEATURE_CMSE)&#32;||&#32;(__ARM_FEATURE_CMSE&#32;&lt;&#32;3)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01244"/>01244 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;PSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01245"/>01245 &#32;&#32;(void)ProcStackPtrLimit;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01246"/>01246 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01247"/>01247 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;psplim,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(ProcStackPtrLimit));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01248"/>01248 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01249"/>01249 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01250"/>01250 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01251"/>01251 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01252"/>01252 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;&#32;&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01262"/>01262 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_PSPLIM_NS(uint32_t&#32;ProcStackPtrLimit)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01263"/>01263 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01264"/>01264 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01265"/>01265 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;PSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01266"/>01266 &#32;&#32;(void)ProcStackPtrLimit;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01267"/>01267 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01268"/>01268 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;psplim_ns,&#32;%0\n&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(ProcStackPtrLimit));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01269"/>01269 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01270"/>01270 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01271"/>01271 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01272"/>01272 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01273"/>01273 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01282"/>01282 __STATIC_FORCEINLINE&#32;uint32_t&#32;__get_MSPLIM(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01283"/>01283 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01284"/>01284 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01285"/>01285 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(!defined&#32;(__ARM_FEATURE_CMSE)&#32;||&#32;(__ARM_FEATURE_CMSE&#32;&lt;&#32;3)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01286"/>01286 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;MSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01287"/>01287 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01288"/>01288 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01289"/>01289 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01290"/>01290 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;msplim&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01291"/>01291 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01292"/>01292 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01293"/>01293 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01294"/>01294 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01295"/>01295 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01296"/>01296 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;&#32;&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01305"/>01305 __STATIC_FORCEINLINE&#32;uint32_t&#32;__TZ_get_MSPLIM_NS(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01306"/>01306 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01307"/>01307 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01308"/>01308 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;MSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01309"/>01309 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0U;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01310"/>01310 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01311"/>01311 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01312"/>01312 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MRS&#32;%0,&#32;msplim_ns&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01313"/>01313 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01314"/>01314 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01315"/>01315 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01316"/>01316 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01317"/>01317 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01318"/>01318 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01327"/>01327 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__set_MSPLIM(uint32_t&#32;MainStackPtrLimit)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01328"/>01328 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01329"/>01329 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01330"/>01330 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;(!defined&#32;(__ARM_FEATURE_CMSE)&#32;||&#32;(__ARM_FEATURE_CMSE&#32;&lt;&#32;3)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01331"/>01331 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;MSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01332"/>01332 &#32;&#32;(void)MainStackPtrLimit;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01333"/>01333 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01334"/>01334 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;msplim,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(MainStackPtrLimit));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01335"/>01335 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01336"/>01336 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01337"/>01337 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01338"/>01338 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01339"/>01339 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_CMSE&#32;&#32;)&#32;&amp;&amp;&#32;(__ARM_FEATURE_CMSE&#32;&#32;&#32;==&#32;3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01348"/>01348 __STATIC_FORCEINLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;__TZ_set_MSPLIM_NS(uint32_t&#32;MainStackPtrLimit)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01349"/>01349 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01350"/>01350 <emphasis role="preprocessor">#if&#32;(!(defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1)))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01351"/>01351 &#32;&#32;<emphasis role="comment">//&#32;without&#32;main&#32;extensions,&#32;the&#32;non-secure&#32;MSPLIM&#32;is&#32;RAZ/WI</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01352"/>01352 &#32;&#32;(void)MainStackPtrLimit;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01353"/>01353 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01354"/>01354 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;MSR&#32;msplim_ns,&#32;%0&quot;</emphasis>&#32;:&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(MainStackPtrLimit));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01355"/>01355 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01356"/>01356 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01357"/>01357 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01358"/>01358 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01359"/>01359 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;((defined&#32;(__ARM_ARCH_8M_MAIN__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_MAIN__&#32;==&#32;1))&#32;||&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01360"/>01360 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(defined&#32;(__ARM_ARCH_8M_BASE__&#32;)&#32;&amp;&amp;&#32;(__ARM_ARCH_8M_BASE__&#32;==&#32;1))&#32;&#32;&#32;&#32;)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01361"/>01361 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01367"/>01367 <emphasis role="preprocessor">#if&#32;((defined&#32;(__FPU_PRESENT)&#32;&amp;&amp;&#32;(__FPU_PRESENT&#32;==&#32;1U))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01368"/>01368 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__FPU_USED&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__FPU_USED&#32;&#32;&#32;&#32;==&#32;1U))&#32;&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01369"/>01369 <emphasis role="preprocessor">#define&#32;__get_FPSCR&#32;&#32;&#32;&#32;&#32;&#32;(uint32_t)__builtin_arm_get_fpscr</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01370"/>01370 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01371"/><link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga6b3a48e13de4b114653b4e06145a601d">01371</link> <emphasis role="preprocessor">#define&#32;__get_FPSCR()&#32;&#32;&#32;&#32;&#32;&#32;((uint32_t)0U)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01372"/>01372 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01373"/>01373 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01379"/>01379 <emphasis role="preprocessor">#if&#32;((defined&#32;(__FPU_PRESENT)&#32;&amp;&amp;&#32;(__FPU_PRESENT&#32;==&#32;1U))&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01380"/>01380 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;(defined&#32;(__FPU_USED&#32;&#32;&#32;)&#32;&amp;&amp;&#32;(__FPU_USED&#32;&#32;&#32;&#32;==&#32;1U))&#32;&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01381"/>01381 <emphasis role="preprocessor">#define&#32;__set_FPSCR&#32;&#32;&#32;&#32;&#32;&#32;__builtin_arm_set_fpscr</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01382"/>01382 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01383"/><link linkend="_group___c_m_s_i_s___core___reg_acc_functions_1ga3cd91c42ad2793c3f3ae553a1b975512">01383</link> <emphasis role="preprocessor">#define&#32;__set_FPSCR(x)&#32;&#32;&#32;&#32;&#32;&#32;((void)(x))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01384"/>01384 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01385"/>01385 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01386"/>01386 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01390"/>01390 <emphasis role="comment">/*&#32;###################&#32;&#32;Compiler&#32;specific&#32;Intrinsics&#32;&#32;###########################&#32;*/</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01396"/>01396 <emphasis role="preprocessor">#if&#32;(defined&#32;(__ARM_FEATURE_DSP)&#32;&amp;&amp;&#32;(__ARM_FEATURE_DSP&#32;==&#32;1))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01397"/>01397 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01398"/>01398 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01399"/>01399 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01400"/>01400 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01401"/>01401 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01402"/>01402 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01403"/>01403 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01404"/>01404 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01405"/>01405 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01406"/>01406 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01407"/>01407 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01408"/>01408 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01409"/>01409 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01410"/>01410 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01411"/>01411 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01412"/>01412 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01413"/>01413 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01414"/>01414 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01415"/>01415 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01416"/>01416 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01417"/>01417 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01418"/>01418 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01419"/>01419 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01420"/>01420 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01421"/>01421 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01422"/>01422 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01423"/>01423 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01424"/>01424 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01425"/>01425 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01426"/>01426 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01427"/>01427 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01428"/>01428 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01429"/>01429 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01430"/>01430 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01431"/>01431 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01432"/>01432 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01433"/>01433 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01434"/>01434 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01435"/>01435 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01436"/>01436 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01437"/>01437 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01438"/>01438 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHADD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01439"/>01439 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01440"/>01440 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01441"/>01441 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01442"/>01442 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhadd8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01443"/>01443 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01444"/>01444 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01445"/>01445 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01446"/>01446 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01447"/>01447 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SSUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01448"/>01448 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01449"/>01449 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01450"/>01450 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01451"/>01451 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ssub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01452"/>01452 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01453"/>01453 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01454"/>01454 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01455"/>01455 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QSUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01456"/>01456 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01457"/>01457 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01458"/>01458 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01459"/>01459 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qsub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01460"/>01460 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01461"/>01461 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01462"/>01462 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01463"/>01463 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHSUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01464"/>01464 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01465"/>01465 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01466"/>01466 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01467"/>01467 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shsub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01468"/>01468 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01469"/>01469 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01470"/>01470 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01471"/>01471 __STATIC_FORCEINLINE&#32;uint32_t&#32;__USUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01472"/>01472 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01473"/>01473 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01474"/>01474 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01475"/>01475 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;usub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01476"/>01476 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01477"/>01477 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01478"/>01478 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01479"/>01479 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQSUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01480"/>01480 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01481"/>01481 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01482"/>01482 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01483"/>01483 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqsub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01484"/>01484 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01485"/>01485 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01486"/>01486 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01487"/>01487 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHSUB8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01488"/>01488 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01489"/>01489 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01490"/>01490 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01491"/>01491 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhsub8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01492"/>01492 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01493"/>01493 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01494"/>01494 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01495"/>01495 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01496"/>01496 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01497"/>01497 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01498"/>01498 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01499"/>01499 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01500"/>01500 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01501"/>01501 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01502"/>01502 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01503"/>01503 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01504"/>01504 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01505"/>01505 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01506"/>01506 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01507"/>01507 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01508"/>01508 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01509"/>01509 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01510"/>01510 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01511"/>01511 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01512"/>01512 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01513"/>01513 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01514"/>01514 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01515"/>01515 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01516"/>01516 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01517"/>01517 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01518"/>01518 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01519"/>01519 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01520"/>01520 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01521"/>01521 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01522"/>01522 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01523"/>01523 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01524"/>01524 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01525"/>01525 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01526"/>01526 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01527"/>01527 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01528"/>01528 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01529"/>01529 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01530"/>01530 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01531"/>01531 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01532"/>01532 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01533"/>01533 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01534"/>01534 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01535"/>01535 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01536"/>01536 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHADD16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01537"/>01537 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01538"/>01538 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01539"/>01539 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01540"/>01540 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhadd16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01541"/>01541 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01542"/>01542 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01543"/>01543 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01544"/>01544 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SSUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01545"/>01545 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01546"/>01546 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01547"/>01547 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01548"/>01548 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ssub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01549"/>01549 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01550"/>01550 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01551"/>01551 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01552"/>01552 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QSUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01553"/>01553 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01554"/>01554 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01555"/>01555 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01556"/>01556 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qsub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01557"/>01557 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01558"/>01558 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01559"/>01559 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01560"/>01560 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHSUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01561"/>01561 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01562"/>01562 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01563"/>01563 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01564"/>01564 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shsub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01565"/>01565 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01566"/>01566 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01567"/>01567 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01568"/>01568 __STATIC_FORCEINLINE&#32;uint32_t&#32;__USUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01569"/>01569 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01570"/>01570 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01571"/>01571 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01572"/>01572 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;usub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01573"/>01573 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01574"/>01574 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01575"/>01575 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01576"/>01576 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQSUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01577"/>01577 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01578"/>01578 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01579"/>01579 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01580"/>01580 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqsub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01581"/>01581 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01582"/>01582 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01583"/>01583 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01584"/>01584 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHSUB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01585"/>01585 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01586"/>01586 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01587"/>01587 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01588"/>01588 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhsub16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01589"/>01589 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01590"/>01590 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01591"/>01591 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01592"/>01592 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01593"/>01593 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01594"/>01594 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01595"/>01595 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01596"/>01596 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01597"/>01597 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01598"/>01598 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01599"/>01599 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01600"/>01600 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01601"/>01601 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01602"/>01602 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01603"/>01603 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01604"/>01604 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01605"/>01605 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01606"/>01606 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01607"/>01607 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01608"/>01608 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01609"/>01609 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01610"/>01610 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01611"/>01611 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01612"/>01612 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01613"/>01613 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01614"/>01614 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01615"/>01615 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01616"/>01616 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01617"/>01617 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01618"/>01618 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01619"/>01619 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01620"/>01620 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01621"/>01621 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01622"/>01622 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01623"/>01623 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01624"/>01624 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01625"/>01625 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01626"/>01626 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01627"/>01627 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01628"/>01628 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01629"/>01629 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01630"/>01630 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01631"/>01631 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01632"/>01632 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHASX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01633"/>01633 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01634"/>01634 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01635"/>01635 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01636"/>01636 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhasx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01637"/>01637 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01638"/>01638 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01639"/>01639 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01640"/>01640 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SSAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01641"/>01641 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01642"/>01642 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01643"/>01643 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01644"/>01644 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;ssax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01645"/>01645 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01646"/>01646 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01647"/>01647 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01648"/>01648 __STATIC_FORCEINLINE&#32;uint32_t&#32;__QSAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01649"/>01649 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01650"/>01650 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01651"/>01651 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01652"/>01652 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qsax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01653"/>01653 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01654"/>01654 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01655"/>01655 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01656"/>01656 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SHSAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01657"/>01657 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01658"/>01658 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01659"/>01659 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01660"/>01660 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;shsax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01661"/>01661 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01662"/>01662 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01663"/>01663 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01664"/>01664 __STATIC_FORCEINLINE&#32;uint32_t&#32;__USAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01665"/>01665 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01666"/>01666 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01667"/>01667 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01668"/>01668 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;usax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01669"/>01669 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01670"/>01670 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01671"/>01671 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01672"/>01672 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UQSAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01673"/>01673 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01674"/>01674 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01675"/>01675 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01676"/>01676 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uqsax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01677"/>01677 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01678"/>01678 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01679"/>01679 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01680"/>01680 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UHSAX(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01681"/>01681 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01682"/>01682 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01683"/>01683 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01684"/>01684 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uhsax&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01685"/>01685 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01686"/>01686 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01687"/>01687 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01688"/>01688 __STATIC_FORCEINLINE&#32;uint32_t&#32;__USAD8(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01689"/>01689 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01690"/>01690 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01691"/>01691 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01692"/>01692 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;usad8&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01693"/>01693 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01694"/>01694 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01695"/>01695 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01696"/>01696 __STATIC_FORCEINLINE&#32;uint32_t&#32;__USADA8(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01697"/>01697 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01698"/>01698 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01699"/>01699 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01700"/>01700 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;usada8&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01701"/>01701 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01702"/>01702 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01703"/>01703 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01704"/>01704 <emphasis role="preprocessor">#define&#32;__SSAT16(ARG1,ARG2)&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01705"/>01705 <emphasis role="preprocessor">({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01706"/>01706 <emphasis role="preprocessor">&#32;&#32;int32_t&#32;__RES,&#32;__ARG1&#32;=&#32;(ARG1);&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01707"/>01707 <emphasis role="preprocessor">&#32;&#32;__ASM&#32;(&quot;ssat16&#32;%0,&#32;%1,&#32;%2&quot;&#32;:&#32;&quot;=r&quot;&#32;(__RES)&#32;:&#32;&#32;&quot;I&quot;&#32;(ARG2),&#32;&quot;r&quot;&#32;(__ARG1)&#32;);&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01708"/>01708 <emphasis role="preprocessor">&#32;&#32;__RES;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01709"/>01709 <emphasis role="preprocessor">&#32;})</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01710"/>01710 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01711"/>01711 <emphasis role="preprocessor">#define&#32;__USAT16(ARG1,ARG2)&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01712"/>01712 <emphasis role="preprocessor">({&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01713"/>01713 <emphasis role="preprocessor">&#32;&#32;uint32_t&#32;__RES,&#32;__ARG1&#32;=&#32;(ARG1);&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01714"/>01714 <emphasis role="preprocessor">&#32;&#32;__ASM&#32;(&quot;usat16&#32;%0,&#32;%1,&#32;%2&quot;&#32;:&#32;&quot;=r&quot;&#32;(__RES)&#32;:&#32;&#32;&quot;I&quot;&#32;(ARG2),&#32;&quot;r&quot;&#32;(__ARG1)&#32;);&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01715"/>01715 <emphasis role="preprocessor">&#32;&#32;__RES;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01716"/>01716 <emphasis role="preprocessor">&#32;})</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01717"/>01717 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01718"/>01718 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UXTB16(uint32_t&#32;op1)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01719"/>01719 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01720"/>01720 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01721"/>01721 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01722"/>01722 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uxtb16&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01723"/>01723 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01724"/>01724 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01725"/>01725 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01726"/>01726 __STATIC_FORCEINLINE&#32;uint32_t&#32;__UXTAB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01727"/>01727 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01728"/>01728 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01729"/>01729 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01730"/>01730 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;uxtab16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01731"/>01731 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01732"/>01732 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01733"/>01733 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01734"/>01734 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SXTB16(uint32_t&#32;op1)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01735"/>01735 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01736"/>01736 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01737"/>01737 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01738"/>01738 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sxtb16&#32;%0,&#32;%1&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1));
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01739"/>01739 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01740"/>01740 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01741"/>01741 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01742"/>01742 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SXTAB16(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01743"/>01743 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01744"/>01744 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01745"/>01745 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01746"/>01746 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sxtab16&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01747"/>01747 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01748"/>01748 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01749"/>01749 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01750"/>01750 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMUAD&#32;&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01751"/>01751 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01752"/>01752 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01753"/>01753 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01754"/>01754 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smuad&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01755"/>01755 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01756"/>01756 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01757"/>01757 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01758"/>01758 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMUADX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01759"/>01759 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01760"/>01760 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01761"/>01761 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01762"/>01762 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smuadx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01763"/>01763 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01764"/>01764 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01765"/>01765 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01766"/>01766 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMLAD&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01767"/>01767 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01768"/>01768 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01769"/>01769 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01770"/>01770 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlad&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01771"/>01771 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01772"/>01772 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01773"/>01773 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01774"/>01774 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMLADX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01775"/>01775 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01776"/>01776 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01777"/>01777 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01778"/>01778 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smladx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01779"/>01779 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01780"/>01780 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01781"/>01781 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01782"/>01782 __STATIC_FORCEINLINE&#32;uint64_t&#32;__SMLALD&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint64_t&#32;acc)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01783"/>01783 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01784"/>01784 &#32;&#32;<emphasis role="keyword">union&#32;</emphasis>llreg_u{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01785"/>01785 &#32;&#32;&#32;&#32;uint32_t&#32;w32[2];
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01786"/>01786 &#32;&#32;&#32;&#32;uint64_t&#32;w64;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01787"/>01787 &#32;&#32;}&#32;llr;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01788"/>01788 &#32;&#32;llr.w64&#32;=&#32;acc;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01789"/>01789 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01790"/>01790 <emphasis role="preprocessor">#ifndef&#32;__ARMEB__&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Little&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01791"/>01791 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlald&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[1])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01792"/>01792 <emphasis role="preprocessor">#else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Big&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01793"/>01793 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlald&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[0])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01794"/>01794 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01795"/>01795 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01796"/>01796 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(llr.w64);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01797"/>01797 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01798"/>01798 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01799"/>01799 __STATIC_FORCEINLINE&#32;uint64_t&#32;__SMLALDX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint64_t&#32;acc)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01800"/>01800 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01801"/>01801 &#32;&#32;<emphasis role="keyword">union&#32;</emphasis>llreg_u{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01802"/>01802 &#32;&#32;&#32;&#32;uint32_t&#32;w32[2];
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01803"/>01803 &#32;&#32;&#32;&#32;uint64_t&#32;w64;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01804"/>01804 &#32;&#32;}&#32;llr;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01805"/>01805 &#32;&#32;llr.w64&#32;=&#32;acc;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01806"/>01806 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01807"/>01807 <emphasis role="preprocessor">#ifndef&#32;__ARMEB__&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Little&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01808"/>01808 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlaldx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[1])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01809"/>01809 <emphasis role="preprocessor">#else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Big&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01810"/>01810 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlaldx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[0])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01811"/>01811 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01812"/>01812 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01813"/>01813 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(llr.w64);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01814"/>01814 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01815"/>01815 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01816"/>01816 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMUSD&#32;&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01817"/>01817 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01818"/>01818 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01819"/>01819 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01820"/>01820 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smusd&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01821"/>01821 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01822"/>01822 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01823"/>01823 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01824"/>01824 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMUSDX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01825"/>01825 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01826"/>01826 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01827"/>01827 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01828"/>01828 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smusdx&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01829"/>01829 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01830"/>01830 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01831"/>01831 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01832"/>01832 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMLSD&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01833"/>01833 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01834"/>01834 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01835"/>01835 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01836"/>01836 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsd&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01837"/>01837 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01838"/>01838 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01839"/>01839 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01840"/>01840 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SMLSDX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01841"/>01841 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01842"/>01842 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01843"/>01843 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01844"/>01844 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsdx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01845"/>01845 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01846"/>01846 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01847"/>01847 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01848"/>01848 __STATIC_FORCEINLINE&#32;uint64_t&#32;__SMLSLD&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint64_t&#32;acc)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01849"/>01849 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01850"/>01850 &#32;&#32;<emphasis role="keyword">union&#32;</emphasis>llreg_u{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01851"/>01851 &#32;&#32;&#32;&#32;uint32_t&#32;w32[2];
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01852"/>01852 &#32;&#32;&#32;&#32;uint64_t&#32;w64;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01853"/>01853 &#32;&#32;}&#32;llr;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01854"/>01854 &#32;&#32;llr.w64&#32;=&#32;acc;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01855"/>01855 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01856"/>01856 <emphasis role="preprocessor">#ifndef&#32;__ARMEB__&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Little&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01857"/>01857 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsld&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[1])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01858"/>01858 <emphasis role="preprocessor">#else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Big&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01859"/>01859 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsld&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[0])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01860"/>01860 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01861"/>01861 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01862"/>01862 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(llr.w64);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01863"/>01863 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01864"/>01864 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01865"/>01865 __STATIC_FORCEINLINE&#32;uint64_t&#32;__SMLSLDX&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2,&#32;uint64_t&#32;acc)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01866"/>01866 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01867"/>01867 &#32;&#32;<emphasis role="keyword">union&#32;</emphasis>llreg_u{
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01868"/>01868 &#32;&#32;&#32;&#32;uint32_t&#32;w32[2];
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01869"/>01869 &#32;&#32;&#32;&#32;uint64_t&#32;w64;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01870"/>01870 &#32;&#32;}&#32;llr;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01871"/>01871 &#32;&#32;llr.w64&#32;=&#32;acc;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01872"/>01872 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01873"/>01873 <emphasis role="preprocessor">#ifndef&#32;__ARMEB__&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Little&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01874"/>01874 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsldx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[0]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[1])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01875"/>01875 <emphasis role="preprocessor">#else&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Big&#32;endian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01876"/>01876 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smlsldx&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(llr.w32[0]):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;,&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>&#32;(llr.w32[1]),&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;(llr.w32[0])&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01877"/>01877 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01878"/>01878 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01879"/>01879 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(llr.w64);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01880"/>01880 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01881"/>01881 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01882"/>01882 __STATIC_FORCEINLINE&#32;uint32_t&#32;__SEL&#32;&#32;(uint32_t&#32;op1,&#32;uint32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01883"/>01883 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01884"/>01884 &#32;&#32;uint32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01885"/>01885 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01886"/>01886 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;sel&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01887"/>01887 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01888"/>01888 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01889"/>01889 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01890"/>01890 __STATIC_FORCEINLINE&#32;&#32;int32_t&#32;__QADD(&#32;int32_t&#32;op1,&#32;&#32;int32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01891"/>01891 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01892"/>01892 &#32;&#32;int32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01893"/>01893 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01894"/>01894 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qadd&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01895"/>01895 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01896"/>01896 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01897"/>01897 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01898"/>01898 __STATIC_FORCEINLINE&#32;&#32;int32_t&#32;__QSUB(&#32;int32_t&#32;op1,&#32;&#32;int32_t&#32;op2)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01899"/>01899 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01900"/>01900 &#32;&#32;int32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01901"/>01901 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01902"/>01902 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;qsub&#32;%0,&#32;%1,&#32;%2&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result)&#32;:&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01903"/>01903 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01904"/>01904 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01905"/>01905 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01906"/>01906 <emphasis role="preprocessor">#define&#32;__PKHBT(ARG1,ARG2,ARG3)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;((((uint32_t)(ARG1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0x0000FFFFUL)&#32;|&#32;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01907"/>01907 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((((uint32_t)(ARG2))&#32;&lt;&lt;&#32;(ARG3))&#32;&amp;&#32;0xFFFF0000UL)&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01908"/>01908 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01909"/>01909 <emphasis role="preprocessor">#define&#32;__PKHTB(ARG1,ARG2,ARG3)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(&#32;((((uint32_t)(ARG1))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&amp;&#32;0xFFFF0000UL)&#32;|&#32;&#32;\</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01910"/>01910 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((((uint32_t)(ARG2))&#32;&gt;&gt;&#32;(ARG3))&#32;&amp;&#32;0x0000FFFFUL)&#32;&#32;)</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01911"/>01911 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01912"/>01912 <emphasis role="preprocessor">#define&#32;__SXTB16_RORn(ARG1,&#32;ARG2)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__SXTB16(__ROR(ARG1,&#32;ARG2))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01913"/>01913 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01914"/>01914 <emphasis role="preprocessor">#define&#32;__SXTAB16_RORn(ARG1,&#32;ARG2,&#32;ARG3)&#32;__SXTAB16(ARG1,&#32;__ROR(ARG2,&#32;ARG3))</emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01915"/>01915 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01916"/>01916 __STATIC_FORCEINLINE&#32;int32_t&#32;__SMMLA&#32;(int32_t&#32;op1,&#32;int32_t&#32;op2,&#32;int32_t&#32;op3)
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01917"/>01917 {
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01918"/>01918 &#32;&#32;int32_t&#32;result;
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01919"/>01919 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01920"/>01920 &#32;&#32;__ASM&#32;<emphasis role="keyword">volatile</emphasis>&#32;(<emphasis role="stringliteral">&quot;smmla&#32;%0,&#32;%1,&#32;%2,&#32;%3&quot;</emphasis>&#32;:&#32;<emphasis role="stringliteral">&quot;=r&quot;</emphasis>&#32;(result):&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;&#32;(op1),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op2),&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>&#32;(op3)&#32;);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01921"/>01921 &#32;&#32;<emphasis role="keywordflow">return</emphasis>(result);
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01922"/>01922 }
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01923"/>01923 
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01924"/>01924 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;(__ARM_FEATURE_DSP&#32;==&#32;1)&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_cmsis__armclang__ltm_8h_source_1l01928"/>01928 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__CMSIS_ARMCLANG_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
