<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8h_source" xml:lang="en-US">
<title>main.h</title>
<indexterm><primary>Inc/main.h</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="_main_8h_source_1l00001"/>00001 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_main_8h_source_1l00002"/>00002 <emphasis role="comment">&#32;*&#32;main.h</emphasis>
<anchor xml:id="_main_8h_source_1l00003"/>00003 <emphasis role="comment">&#32;*</emphasis>
<anchor xml:id="_main_8h_source_1l00004"/>00004 <emphasis role="comment">&#32;*&#32;&#32;Created&#32;on:&#32;Nov&#32;17,&#32;2021</emphasis>
<anchor xml:id="_main_8h_source_1l00005"/>00005 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;Author:&#32;Kunal</emphasis>
<anchor xml:id="_main_8h_source_1l00006"/>00006 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_main_8h_source_1l00007"/>00007 
<anchor xml:id="_main_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#ifndef&#32;MAIN_H_</emphasis>
<anchor xml:id="_main_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#define&#32;MAIN_H_</emphasis>
<anchor xml:id="_main_8h_source_1l00010"/>00010 
<anchor xml:id="_main_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stm32f407xx_8h">stm32f407xx.h</link>&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stm32f4xx_8h">stm32f4xx.h</link>&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_main_8h_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;math.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;inttypes.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;string.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;stdlib.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;stdarg.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;stdbool.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&quot;stdint.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_system__stm32f4xx_8h">system_stm32f4xx.h</link>&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&quot;GPIO.h&quot;</emphasis>
<anchor xml:id="_main_8h_source_1l00023"/>00023 
<anchor xml:id="_main_8h_source_1l00024"/>00024 
<anchor xml:id="_main_8h_source_1l00025"/><link linkend="_struct_interrupts">00025</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_interrupts">Interrupts</link>
<anchor xml:id="_main_8h_source_1l00026"/>00026 {
<anchor xml:id="_main_8h_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Enable;
<anchor xml:id="_main_8h_source_1l00028"/>00028 &#32;&#32;&#32;&#32;uint32_t&#32;Interrup_Flags;
<anchor xml:id="_main_8h_source_1l00029"/>00029 }<link linkend="_struct_interrupts">Interrupts</link>;
<anchor xml:id="_main_8h_source_1l00030"/>00030 
<anchor xml:id="_main_8h_source_1l00031"/>00031 <emphasis role="preprocessor">#define&#32;__weak&#32;&#32;&#32;__attribute__((weak))</emphasis>
<anchor xml:id="_main_8h_source_1l00032"/>00032 
<anchor xml:id="_main_8h_source_1l00033"/>00033 <emphasis role="preprocessor">#define&#32;SPI_Debug_Flag&#32;0</emphasis>
<anchor xml:id="_main_8h_source_1l00034"/>00034 
<anchor xml:id="_main_8h_source_1l00035"/>00035 <emphasis role="keyword">extern</emphasis>&#32;uint32_t&#32;APB1CLK_SPEED;
<anchor xml:id="_main_8h_source_1l00036"/>00036 <emphasis role="keyword">extern</emphasis>&#32;uint32_t&#32;APB2CLK_SPEED;
<anchor xml:id="_main_8h_source_1l00037"/>00037 
<anchor xml:id="_main_8h_source_1l00038"/>00038 __STATIC_INLINE&#32;int32_t&#32;SystemAPB1_Clock_Speed(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00039"/>00039 {
<anchor xml:id="_main_8h_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_group___s_t_m32_f4xx___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6">SystemCoreClock</link>&#32;&gt;&gt;&#32;<link linkend="_group___s_t_m32_f4xx___system___exported__types_1ga5b4f8b768465842cf854a8f993b375e9">APBPrescTable</link>[(RCC-&gt;CFGR&#32;&amp;&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga50b2423a5fea74a47b9eb8ab51869412">RCC_CFGR_PPRE1</link>)&gt;&gt;&#32;RCC_CFGR_PPRE1_Pos]);
<anchor xml:id="_main_8h_source_1l00041"/>00041 }
<anchor xml:id="_main_8h_source_1l00042"/>00042 
<anchor xml:id="_main_8h_source_1l00043"/>00043 __STATIC_INLINE&#32;int32_t&#32;SystemAPB2_Clock_Speed(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00044"/>00044 {
<anchor xml:id="_main_8h_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_group___s_t_m32_f4xx___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6">SystemCoreClock</link>&#32;&gt;&gt;&#32;<link linkend="_group___s_t_m32_f4xx___system___exported__types_1ga5b4f8b768465842cf854a8f993b375e9">APBPrescTable</link>[(RCC-&gt;CFGR&#32;&amp;&#32;<link linkend="_group___peripheral___registers___bits___definition_1gad61bd4f9f345ba41806813b0bfff1311">RCC_CFGR_PPRE2</link>)&gt;&gt;&#32;RCC_CFGR_PPRE2_Pos]);
<anchor xml:id="_main_8h_source_1l00046"/>00046 }
<anchor xml:id="_main_8h_source_1l00047"/>00047 
<anchor xml:id="_main_8h_source_1l00048"/>00048 __STATIC_INLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;MCU_Clock_Setup(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00049"/>00049 {
<anchor xml:id="_main_8h_source_1l00050"/>00050 <emphasis role="comment">//&#32;&#32;uint8_t&#32;pll_m&#32;=&#32;4;</emphasis>
<anchor xml:id="_main_8h_source_1l00051"/>00051 <emphasis role="comment">//&#32;&#32;uint8_t&#32;pll_n&#32;=&#32;168;&#32;//192</emphasis>
<anchor xml:id="_main_8h_source_1l00052"/>00052 <emphasis role="comment">//&#32;&#32;uint8_t&#32;pll_p&#32;=&#32;0;</emphasis>
<anchor xml:id="_main_8h_source_1l00053"/>00053 <emphasis role="comment">//&#32;&#32;uint8_t&#32;pll_q&#32;=&#32;7;</emphasis>
<anchor xml:id="_main_8h_source_1l00054"/>00054 
<anchor xml:id="_main_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;uint8_t&#32;pll_m&#32;=&#32;8;
<anchor xml:id="_main_8h_source_1l00056"/>00056 &#32;&#32;&#32;&#32;uint16_t&#32;pll_n&#32;=&#32;336;&#32;<emphasis role="comment">//192</emphasis>
<anchor xml:id="_main_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;uint8_t&#32;pll_p&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00058"/>00058 &#32;&#32;&#32;&#32;uint8_t&#32;pll_q&#32;=&#32;7;
<anchor xml:id="_main_8h_source_1l00059"/>00059 
<anchor xml:id="_main_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;RCC-&gt;PLLCFGR&#32;=&#32;0x00000000;
<anchor xml:id="_main_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CR&#32;|=&#32;RCC_CR_HSEON;
<anchor xml:id="_main_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(!(RCC&#32;-&gt;&#32;CR&#32;&amp;&#32;RCC_CR_HSERDY)){}
<anchor xml:id="_main_8h_source_1l00063"/>00063 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;APB1ENR&#32;|=&#32;RCC_APB1ENR_PWREN;
<anchor xml:id="_main_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;PWR&#32;-&gt;CR&#32;|=&#32;<link linkend="_group___peripheral___registers___bits___definition_1gaccc33f1ba4e374e116ffa50f3a503030">PWR_CR_VOS</link>;
<anchor xml:id="_main_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;FLASH&#32;-&gt;&#32;ACR&#32;|=&#32;FLASH_ACR_ICEN&#32;|&#32;FLASH_ACR_PRFTEN&#32;|&#32;FLASH_ACR_DCEN&#32;|&#32;FLASH_ACR_LATENCY_5WS;
<anchor xml:id="_main_8h_source_1l00066"/>00066 &#32;&#32;&#32;&#32;RCC-&gt;PLLCFGR&#32;|=&#32;(pll_q&#32;&lt;&lt;&#32;24)&#32;|&#32;(pll_p&#32;&lt;&lt;&#32;16)&#32;|&#32;(pll_n&#32;&lt;&lt;&#32;6)&#32;|&#32;(pll_m&#32;&lt;&lt;&#32;0);
<anchor xml:id="_main_8h_source_1l00067"/>00067 &#32;&#32;&#32;&#32;RCC&#32;-&gt;PLLCFGR&#32;|=&#32;1&#32;&lt;&lt;&#32;22;
<anchor xml:id="_main_8h_source_1l00068"/>00068 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CFGR&#32;|=&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga2b7d7f29b09a49c31404fc0d44645c84">RCC_CFGR_HPRE_DIV1</link>;
<anchor xml:id="_main_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CFGR&#32;|=&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga0e340725f46e9462d9b02a079b9fa8ae">RCC_CFGR_PPRE1_DIV4</link>;
<anchor xml:id="_main_8h_source_1l00070"/>00070 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CFGR&#32;|=&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga99d9c91eaad122460d324a71cc939d1b">RCC_CFGR_PPRE2_DIV2</link>;
<anchor xml:id="_main_8h_source_1l00071"/>00071 
<anchor xml:id="_main_8h_source_1l00072"/>00072 
<anchor xml:id="_main_8h_source_1l00073"/>00073 
<anchor xml:id="_main_8h_source_1l00074"/>00074 
<anchor xml:id="_main_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CR&#32;|=&#32;RCC_CR_PLLON;
<anchor xml:id="_main_8h_source_1l00076"/>00076 
<anchor xml:id="_main_8h_source_1l00077"/>00077 
<anchor xml:id="_main_8h_source_1l00078"/>00078 
<anchor xml:id="_main_8h_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(!(RCC-&gt;CR&#32;&amp;&#32;RCC_CR_PLLRDY)){}
<anchor xml:id="_main_8h_source_1l00080"/>00080 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CFGR&#32;|=&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga87389cacb2eaf53730da13a2a33cd487">RCC_CFGR_SW_PLL</link>;
<anchor xml:id="_main_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((RCC&#32;-&gt;&#32;CFGR&#32;&amp;&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga2c67e2279804a83ef24438267d9d4a6c">RCC_CFGR_SWS_PLL</link>)&#32;!=&#32;<link linkend="_group___peripheral___registers___bits___definition_1ga2c67e2279804a83ef24438267d9d4a6c">RCC_CFGR_SWS_PLL</link>);
<anchor xml:id="_main_8h_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<link linkend="_group___s_t_m32_f4xx___system___exported___functions_1gae0c36a9591fe6e9c45ecb21a794f0f0f">SystemCoreClockUpdate</link>();
<anchor xml:id="_main_8h_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___core___n_v_i_c_functions_1gae4e8f0238527c69f522029b93c8e5b78">SysTick_Config</link>(<link linkend="_group___s_t_m32_f4xx___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6">SystemCoreClock</link>/168);
<anchor xml:id="_main_8h_source_1l00084"/>00084 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;APB2ENR&#32;|=&#32;RCC_APB2ENR_SYSCFGEN;
<anchor xml:id="_main_8h_source_1l00085"/>00085 }
<anchor xml:id="_main_8h_source_1l00086"/>00086 
<anchor xml:id="_main_8h_source_1l00087"/>00087 
<anchor xml:id="_main_8h_source_1l00088"/>00088 __STATIC_INLINE&#32;<emphasis role="keywordtype">int</emphasis>&#32;I2S_Clock_Init()
<anchor xml:id="_main_8h_source_1l00089"/>00089 {
<anchor xml:id="_main_8h_source_1l00090"/>00090 <emphasis role="comment">//&#32;&#32;int&#32;plli2s_m&#32;=&#32;25;&#32;//25&#32;25&#32;4</emphasis>
<anchor xml:id="_main_8h_source_1l00091"/>00091 <emphasis role="comment">//&#32;&#32;int&#32;plli2s_n&#32;=&#32;344;&#32;//344&#32;192&#32;50</emphasis>
<anchor xml:id="_main_8h_source_1l00092"/>00092 <emphasis role="comment">//&#32;&#32;int&#32;plli2s_r&#32;=&#32;2;&#32;//2&#32;5&#32;2</emphasis>
<anchor xml:id="_main_8h_source_1l00093"/>00093 <emphasis role="comment">//&#32;&#32;RCC&#32;-&gt;&#32;PLLI2SCFGR&#32;=&#32;(plli2s_m&#32;&lt;&lt;&#32;0)&#32;|&#32;(plli2s_n&#32;&lt;&lt;&#32;6)&#32;|&#32;(plli2s_r&#32;&lt;&lt;&#32;28);</emphasis>
<anchor xml:id="_main_8h_source_1l00094"/>00094 <emphasis role="comment">//&#32;&#32;RCC&#32;-&gt;&#32;CR&#32;|=&#32;RCC_CR_PLLI2SON;</emphasis>
<anchor xml:id="_main_8h_source_1l00095"/>00095 <emphasis role="comment">//&#32;&#32;while(!(RCC&#32;-&gt;&#32;CR&#32;&amp;&#32;RCC_CR_PLLI2SRDY));</emphasis>
<anchor xml:id="_main_8h_source_1l00096"/>00096 
<anchor xml:id="_main_8h_source_1l00097"/>00097 &#32;&#32;&#32;&#32;uint32_t&#32;RCC_PLLI2SCFGR&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;uint32_t&#32;plli2s_n&#32;=&#32;384;
<anchor xml:id="_main_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;uint32_t&#32;plli2s_r&#32;=&#32;5;
<anchor xml:id="_main_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;RCC_PLLI2SCFGR&#32;=&#32;plli2s_n&#32;&lt;&lt;&#32;6;
<anchor xml:id="_main_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;RCC_PLLI2SCFGR&#32;|=&#32;plli2s_r&#32;&lt;&lt;&#32;28;
<anchor xml:id="_main_8h_source_1l00102"/>00102 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;PLLI2SCFGR&#32;=&#32;RCC_PLLI2SCFGR;
<anchor xml:id="_main_8h_source_1l00103"/>00103 &#32;&#32;&#32;&#32;RCC&#32;-&gt;&#32;CR&#32;|=&#32;RCC_CR_PLLI2SON;
<anchor xml:id="_main_8h_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(!(RCC&#32;-&gt;&#32;CR&#32;&amp;&#32;RCC_CR_PLLI2SRDY));
<anchor xml:id="_main_8h_source_1l00105"/>00105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0UL);
<anchor xml:id="_main_8h_source_1l00106"/>00106 }
<anchor xml:id="_main_8h_source_1l00107"/>00107 
<anchor xml:id="_main_8h_source_1l00108"/>00108 
<anchor xml:id="_main_8h_source_1l00109"/>00109 
<anchor xml:id="_main_8h_source_1l00110"/>00110 __STATIC_INLINE&#32;uint32_t&#32;Delay_Config(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00111"/>00111 {
<anchor xml:id="_main_8h_source_1l00112"/>00112 
<anchor xml:id="_main_8h_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;LOAD&#32;=&#32;0x00FFFFFF;
<anchor xml:id="_main_8h_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;=&#32;5;
<anchor xml:id="_main_8h_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0UL);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Function&#32;successful&#32;*/</emphasis>
<anchor xml:id="_main_8h_source_1l00118"/>00118 }
<anchor xml:id="_main_8h_source_1l00119"/>00119 
<anchor xml:id="_main_8h_source_1l00120"/>00120 __STATIC_INLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;Delay_DeInit(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00121"/>00121 {
<anchor xml:id="_main_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;&amp;=&#32;~SysTick_CTRL_TICKINT_Msk;
<anchor xml:id="_main_8h_source_1l00123"/>00123 }
<anchor xml:id="_main_8h_source_1l00124"/>00124 
<anchor xml:id="_main_8h_source_1l00125"/>00125 
<anchor xml:id="_main_8h_source_1l00126"/>00126 __STATIC_INLINE&#32;uint32_t&#32;Delay_us(<emphasis role="keywordtype">float</emphasis>&#32;us)
<anchor xml:id="_main_8h_source_1l00127"/>00127 {
<anchor xml:id="_main_8h_source_1l00128"/>00128 
<anchor xml:id="_main_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;LOAD&#32;=&#32;168&#32;*&#32;us;
<anchor xml:id="_main_8h_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;&amp;&#32;0x00010000)&#32;==&#32;0);
<anchor xml:id="_main_8h_source_1l00132"/>00132 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0UL);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Function&#32;successful&#32;*/</emphasis>
<anchor xml:id="_main_8h_source_1l00133"/>00133 }
<anchor xml:id="_main_8h_source_1l00134"/>00134 
<anchor xml:id="_main_8h_source_1l00135"/>00135 __STATIC_INLINE&#32;uint32_t&#32;Delay_ms(<emphasis role="keywordtype">float</emphasis>&#32;ms)
<anchor xml:id="_main_8h_source_1l00136"/>00136 {
<anchor xml:id="_main_8h_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;x&#32;=0x29040&#32;*&#32;(ms);
<anchor xml:id="_main_8h_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;LOAD&#32;=&#32;&#32;x&#32;;
<anchor xml:id="_main_8h_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;|=&#32;1;
<anchor xml:id="_main_8h_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>((<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;&amp;&#32;0x00010000)&#32;==&#32;0);
<anchor xml:id="_main_8h_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0UL);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Function&#32;successful&#32;*/</emphasis>
<anchor xml:id="_main_8h_source_1l00143"/>00143 }
<anchor xml:id="_main_8h_source_1l00144"/>00144 
<anchor xml:id="_main_8h_source_1l00145"/>00145 
<anchor xml:id="_main_8h_source_1l00146"/>00146 __STATIC_INLINE&#32;uint32_t&#32;Delay_milli(<emphasis role="keywordtype">float</emphasis>&#32;ms)
<anchor xml:id="_main_8h_source_1l00147"/>00147 {
<anchor xml:id="_main_8h_source_1l00148"/>00148 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;ms&gt;0;&#32;ms--)
<anchor xml:id="_main_8h_source_1l00149"/>00149 &#32;&#32;&#32;&#32;{
<anchor xml:id="_main_8h_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Delay_ms(1);
<anchor xml:id="_main_8h_source_1l00151"/>00151 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main_8h_source_1l00152"/>00152 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ms;
<anchor xml:id="_main_8h_source_1l00153"/>00153 }
<anchor xml:id="_main_8h_source_1l00154"/>00154 
<anchor xml:id="_main_8h_source_1l00155"/>00155 
<anchor xml:id="_main_8h_source_1l00156"/>00156 __STATIC_INLINE&#32;uint32_t&#32;Delay_s(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;s)
<anchor xml:id="_main_8h_source_1l00157"/>00157 {
<anchor xml:id="_main_8h_source_1l00158"/>00158 &#32;&#32;&#32;&#32;s&#32;=&#32;s&#32;*&#32;1000;
<anchor xml:id="_main_8h_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;s&gt;0;&#32;s--)
<anchor xml:id="_main_8h_source_1l00160"/>00160 &#32;&#32;&#32;&#32;{
<anchor xml:id="_main_8h_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Delay_ms(1);
<anchor xml:id="_main_8h_source_1l00162"/>00162 &#32;&#32;&#32;&#32;}
<anchor xml:id="_main_8h_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(0UL);
<anchor xml:id="_main_8h_source_1l00164"/>00164 }
<anchor xml:id="_main_8h_source_1l00165"/>00165 
<anchor xml:id="_main_8h_source_1l00166"/>00166 
<anchor xml:id="_main_8h_source_1l00167"/>00167 __STATIC_INLINE&#32;<emphasis role="keywordtype">float</emphasis>&#32;Time_Stamp_Start(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00168"/>00168 {
<anchor xml:id="_main_8h_source_1l00169"/>00169 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temp&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00170"/>00170 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00171"/>00171 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;LOAD&#32;=&#32;0xFFFFFFFF;
<anchor xml:id="_main_8h_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;CTRL&#32;=&#32;0x5;
<anchor xml:id="_main_8h_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;!=&#32;0);
<anchor xml:id="_main_8h_source_1l00175"/>00175 &#32;&#32;&#32;&#32;temp&#32;=&#32;(float)(<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;/&#32;(<link linkend="_group___s_t_m32_f4xx___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6">SystemCoreClock</link>));
<anchor xml:id="_main_8h_source_1l00176"/>00176 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;
<anchor xml:id="_main_8h_source_1l00177"/>00177 }
<anchor xml:id="_main_8h_source_1l00178"/>00178 
<anchor xml:id="_main_8h_source_1l00179"/>00179 __STATIC_INLINE&#32;<emphasis role="keywordtype">float</emphasis>&#32;Time_Stamp_End(<emphasis role="keywordtype">void</emphasis>)
<anchor xml:id="_main_8h_source_1l00180"/>00180 {
<anchor xml:id="_main_8h_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temp&#32;=&#32;0;
<anchor xml:id="_main_8h_source_1l00182"/>00182 &#32;&#32;&#32;&#32;temp&#32;=&#32;(float)(<link linkend="_group___c_m_s_i_s___c_o_r_e_1gacd96c53beeaff8f603fcda425eb295de">SysTick</link>-&gt;VAL&#32;/&#32;(<link linkend="_group___s_t_m32_f4xx___system___exported__types_1gaa3cd3e43291e81e795d642b79b6088e6">SystemCoreClock</link>));
<anchor xml:id="_main_8h_source_1l00183"/>00183 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temp;
<anchor xml:id="_main_8h_source_1l00184"/>00184 }
<anchor xml:id="_main_8h_source_1l00185"/>00185 
<anchor xml:id="_main_8h_source_1l00186"/>00186 __STATIC_INLINE&#32;<emphasis role="keywordtype">void</emphasis>&#32;separateFractionAndIntegral(<emphasis role="keywordtype">double</emphasis>&#32;number,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*fractionalPart,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*integralPart)&#32;{
<anchor xml:id="_main_8h_source_1l00187"/>00187 &#32;&#32;&#32;&#32;*integralPart&#32;=&#32;(double)((int64_t)number);
<anchor xml:id="_main_8h_source_1l00188"/>00188 &#32;&#32;&#32;&#32;*fractionalPart&#32;=&#32;number&#32;-&#32;*integralPart;
<anchor xml:id="_main_8h_source_1l00189"/>00189 }
<anchor xml:id="_main_8h_source_1l00190"/>00190 
<anchor xml:id="_main_8h_source_1l00191"/>00191 
<anchor xml:id="_main_8h_source_1l00192"/>00192 
<anchor xml:id="_main_8h_source_1l00193"/>00193 
<anchor xml:id="_main_8h_source_1l00194"/>00194 
<anchor xml:id="_main_8h_source_1l00195"/>00195 
<anchor xml:id="_main_8h_source_1l00196"/>00196 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;MAIN_H_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
