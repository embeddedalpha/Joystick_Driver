<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_r_t_c___type_def" xml:lang="en-US">
<title>RTC_TypeDef Struct Reference</title>
<indexterm><primary>RTC_TypeDef</primary></indexterm>
<para>

<para>Real-Time Clock. </para>
 
</para>
<para>
<computeroutput>#include &lt;stm32f407xx.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Data Fields    </title>
        <itemizedlist>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a63d179b7a36a715dce7203858d3be132">TR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a3df0d8dfcd1ec958659ffe21eb64fa94">DR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ab40c89c59391aaa9d9a8ec011dd0907a">CR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ab3c49a96815fcbee63d95e1e74f20e75">ISR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac9b4c6c5b29f3461ce3f875eea69f35b">PRER</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac5b3c8be61045a304d3076d4714d29f2">WUTR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ab97f3e9584dda705dc10a5f4c5f6e636">CALIBR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac005b1a5bc52634d5a34578cc9d2c3f6">ALRMAR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a4e513deb9f58a138ad9f317cc5a3555d">ALRMBR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a6204786b050eb135fabb15784698e86e">WPR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a8a868e5e76b52ced04c536be3dee08ec">SSR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a2372c05a6c5508e0a9adada793f68b4f">SHIFTR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a042059c8b4168681d6aecf30211dd7b8">TSTR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1abeb6fb580a8fd128182aa9ba2738ac2c">TSDR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a1d6c2bc4c067d6a64ef30d16a5925796">TSSSR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a2ce7c3842792c506635bb87a21588b58">CALR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a14d03244a7fda1d94b51ae9ed144ca12">TAFCR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a61282fa74cede526af85fd9d20513646">ALRMASSR</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a4ef7499da5d5beb1cfc81f7be057a7b2">ALRMBSSR</link></para>
</listitem>
            <listitem><para>uint32_t <link linkend="_struct_r_t_c___type_def_1a6be3d40baea405ecaf6b38462357dac0">RESERVED7</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a4808ec597e5a5fefd8a83a9127dd1aec">BKP0R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1af85290529fb82acef7c9fcea3718346c">BKP1R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1aaa251a80daa57ad0bd7db75cb3b9cdec">BKP2R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a0b1eeda834c3cfd4d2c67f242f7b2a1c">BKP3R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ab13e106cc2eca92d1f4022df3bfdbcd7">BKP4R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ab6bed862c0d0476ff4f89f7b9bf3e130">BKP5R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a1d854d2d7f0452f4c90035952b92d2ba">BKP6R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a2ca54ce1a8d2fa9d1ba6d5987ed5e2cf">BKP7R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac1085f6aae54b353c30871fe90c59851">BKP8R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a6c33564df6eaf97400e0457dde9b14ef">BKP9R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1aade2881a3e408bfd106b27f78bbbcfc9">BKP10R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac66d5e2d3459cff89794c47dbc8f7228">BKP11R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a6f7eee5ae8a32c07f9c8fe14281bdaf3">BKP12R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a6ed4c3a0d4588a75078e9f8e376b4d06">BKP13R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ac60f13e6619724747e61cfbff55b9fab">BKP14R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1afafaddc3a983eb71332b7526d82191ad">BKP15R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1ad2f2eb2fb4b93e21515b10e920e719b6">BKP16R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a2842aa523df62f3508316eb3b2e08f4e">BKP17R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a640ccb2ccfb6316b88c070362dc29339">BKP18R</link></para>
</listitem>
            <listitem><para><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t <link linkend="_struct_r_t_c___type_def_1a4ec1dd54d976989b7c9e59fb14d974fb">BKP19R</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Real-Time Clock. </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00634">634</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<section>
<title>Field Documentation</title>
<anchor xml:id="_struct_r_t_c___type_def_1ac005b1a5bc52634d5a34578cc9d2c3f6"/><section>
    <title>ALRMAR</title>
<indexterm><primary>ALRMAR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>ALRMAR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t ALRMAR</computeroutput></para>
<para>RTC alarm A register, Address offset: 0x1C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00643">643</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a61282fa74cede526af85fd9d20513646"/><section>
    <title>ALRMASSR</title>
<indexterm><primary>ALRMASSR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>ALRMASSR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t ALRMASSR</computeroutput></para>
<para>RTC alarm A sub second register, Address offset: 0x44 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00653">653</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a4e513deb9f58a138ad9f317cc5a3555d"/><section>
    <title>ALRMBR</title>
<indexterm><primary>ALRMBR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>ALRMBR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t ALRMBR</computeroutput></para>
<para>RTC alarm B register, Address offset: 0x20 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00644">644</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a4ef7499da5d5beb1cfc81f7be057a7b2"/><section>
    <title>ALRMBSSR</title>
<indexterm><primary>ALRMBSSR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>ALRMBSSR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t ALRMBSSR</computeroutput></para>
<para>RTC alarm B sub second register, Address offset: 0x48 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00654">654</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a4808ec597e5a5fefd8a83a9127dd1aec"/><section>
    <title>BKP0R</title>
<indexterm><primary>BKP0R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP0R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP0R</computeroutput></para>
<para>RTC backup register 1, Address offset: 0x50 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00656">656</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1aade2881a3e408bfd106b27f78bbbcfc9"/><section>
    <title>BKP10R</title>
<indexterm><primary>BKP10R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP10R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP10R</computeroutput></para>
<para>RTC backup register 10, Address offset: 0x78 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00666">666</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ac66d5e2d3459cff89794c47dbc8f7228"/><section>
    <title>BKP11R</title>
<indexterm><primary>BKP11R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP11R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP11R</computeroutput></para>
<para>RTC backup register 11, Address offset: 0x7C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00667">667</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a6f7eee5ae8a32c07f9c8fe14281bdaf3"/><section>
    <title>BKP12R</title>
<indexterm><primary>BKP12R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP12R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP12R</computeroutput></para>
<para>RTC backup register 12, Address offset: 0x80 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00668">668</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a6ed4c3a0d4588a75078e9f8e376b4d06"/><section>
    <title>BKP13R</title>
<indexterm><primary>BKP13R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP13R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP13R</computeroutput></para>
<para>RTC backup register 13, Address offset: 0x84 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00669">669</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ac60f13e6619724747e61cfbff55b9fab"/><section>
    <title>BKP14R</title>
<indexterm><primary>BKP14R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP14R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP14R</computeroutput></para>
<para>RTC backup register 14, Address offset: 0x88 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00670">670</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1afafaddc3a983eb71332b7526d82191ad"/><section>
    <title>BKP15R</title>
<indexterm><primary>BKP15R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP15R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP15R</computeroutput></para>
<para>RTC backup register 15, Address offset: 0x8C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00671">671</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ad2f2eb2fb4b93e21515b10e920e719b6"/><section>
    <title>BKP16R</title>
<indexterm><primary>BKP16R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP16R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP16R</computeroutput></para>
<para>RTC backup register 16, Address offset: 0x90 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00672">672</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a2842aa523df62f3508316eb3b2e08f4e"/><section>
    <title>BKP17R</title>
<indexterm><primary>BKP17R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP17R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP17R</computeroutput></para>
<para>RTC backup register 17, Address offset: 0x94 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00673">673</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a640ccb2ccfb6316b88c070362dc29339"/><section>
    <title>BKP18R</title>
<indexterm><primary>BKP18R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP18R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP18R</computeroutput></para>
<para>RTC backup register 18, Address offset: 0x98 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00674">674</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a4ec1dd54d976989b7c9e59fb14d974fb"/><section>
    <title>BKP19R</title>
<indexterm><primary>BKP19R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP19R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP19R</computeroutput></para>
<para>RTC backup register 19, Address offset: 0x9C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00675">675</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1af85290529fb82acef7c9fcea3718346c"/><section>
    <title>BKP1R</title>
<indexterm><primary>BKP1R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP1R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP1R</computeroutput></para>
<para>RTC backup register 1, Address offset: 0x54 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00657">657</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1aaa251a80daa57ad0bd7db75cb3b9cdec"/><section>
    <title>BKP2R</title>
<indexterm><primary>BKP2R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP2R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP2R</computeroutput></para>
<para>RTC backup register 2, Address offset: 0x58 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00658">658</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a0b1eeda834c3cfd4d2c67f242f7b2a1c"/><section>
    <title>BKP3R</title>
<indexterm><primary>BKP3R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP3R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP3R</computeroutput></para>
<para>RTC backup register 3, Address offset: 0x5C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00659">659</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ab13e106cc2eca92d1f4022df3bfdbcd7"/><section>
    <title>BKP4R</title>
<indexterm><primary>BKP4R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP4R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP4R</computeroutput></para>
<para>RTC backup register 4, Address offset: 0x60 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00660">660</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ab6bed862c0d0476ff4f89f7b9bf3e130"/><section>
    <title>BKP5R</title>
<indexterm><primary>BKP5R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP5R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP5R</computeroutput></para>
<para>RTC backup register 5, Address offset: 0x64 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00661">661</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a1d854d2d7f0452f4c90035952b92d2ba"/><section>
    <title>BKP6R</title>
<indexterm><primary>BKP6R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP6R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP6R</computeroutput></para>
<para>RTC backup register 6, Address offset: 0x68 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00662">662</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a2ca54ce1a8d2fa9d1ba6d5987ed5e2cf"/><section>
    <title>BKP7R</title>
<indexterm><primary>BKP7R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP7R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP7R</computeroutput></para>
<para>RTC backup register 7, Address offset: 0x6C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00663">663</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ac1085f6aae54b353c30871fe90c59851"/><section>
    <title>BKP8R</title>
<indexterm><primary>BKP8R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP8R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP8R</computeroutput></para>
<para>RTC backup register 8, Address offset: 0x70 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00664">664</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a6c33564df6eaf97400e0457dde9b14ef"/><section>
    <title>BKP9R</title>
<indexterm><primary>BKP9R</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>BKP9R</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t BKP9R</computeroutput></para>
<para>RTC backup register 9, Address offset: 0x74 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00665">665</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ab97f3e9584dda705dc10a5f4c5f6e636"/><section>
    <title>CALIBR</title>
<indexterm><primary>CALIBR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>CALIBR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t CALIBR</computeroutput></para>
<para>RTC calibration register, Address offset: 0x18 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00642">642</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a2ce7c3842792c506635bb87a21588b58"/><section>
    <title>CALR</title>
<indexterm><primary>CALR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>CALR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t CALR</computeroutput></para>
<para>RTC calibration register, Address offset: 0x3C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00651">651</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ab40c89c59391aaa9d9a8ec011dd0907a"/><section>
    <title>CR</title>
<indexterm><primary>CR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>CR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t CR</computeroutput></para>
<para>RTC control register, Address offset: 0x08 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00638">638</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a3df0d8dfcd1ec958659ffe21eb64fa94"/><section>
    <title>DR</title>
<indexterm><primary>DR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>DR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t DR</computeroutput></para>
<para>RTC date register, Address offset: 0x04 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00637">637</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ab3c49a96815fcbee63d95e1e74f20e75"/><section>
    <title>ISR</title>
<indexterm><primary>ISR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>ISR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t ISR</computeroutput></para>
<para>RTC initialization and status register, Address offset: 0x0C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00639">639</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ac9b4c6c5b29f3461ce3f875eea69f35b"/><section>
    <title>PRER</title>
<indexterm><primary>PRER</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>PRER</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t PRER</computeroutput></para>
<para>RTC prescaler register, Address offset: 0x10 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00640">640</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a6be3d40baea405ecaf6b38462357dac0"/><section>
    <title>RESERVED7</title>
<indexterm><primary>RESERVED7</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>RESERVED7</secondary></indexterm>
<para><computeroutput>uint32_t RESERVED7</computeroutput></para>
<para>Reserved, 0x4C <?linebreak?> </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00655">655</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a2372c05a6c5508e0a9adada793f68b4f"/><section>
    <title>SHIFTR</title>
<indexterm><primary>SHIFTR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>SHIFTR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t SHIFTR</computeroutput></para>
<para>RTC shift control register, Address offset: 0x2C </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00647">647</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a8a868e5e76b52ced04c536be3dee08ec"/><section>
    <title>SSR</title>
<indexterm><primary>SSR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>SSR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t SSR</computeroutput></para>
<para>RTC sub second register, Address offset: 0x28 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00646">646</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a14d03244a7fda1d94b51ae9ed144ca12"/><section>
    <title>TAFCR</title>
<indexterm><primary>TAFCR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>TAFCR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t TAFCR</computeroutput></para>
<para>RTC tamper and alternate function configuration register, Address offset: 0x40 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00652">652</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a63d179b7a36a715dce7203858d3be132"/><section>
    <title>TR</title>
<indexterm><primary>TR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>TR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t TR</computeroutput></para>
<para>RTC time register, Address offset: 0x00 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00636">636</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1abeb6fb580a8fd128182aa9ba2738ac2c"/><section>
    <title>TSDR</title>
<indexterm><primary>TSDR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>TSDR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t TSDR</computeroutput></para>
<para>RTC time stamp date register, Address offset: 0x34 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00649">649</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a1d6c2bc4c067d6a64ef30d16a5925796"/><section>
    <title>TSSSR</title>
<indexterm><primary>TSSSR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>TSSSR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t TSSSR</computeroutput></para>
<para>RTC time-stamp sub second register, Address offset: 0x38 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00650">650</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a042059c8b4168681d6aecf30211dd7b8"/><section>
    <title>TSTR</title>
<indexterm><primary>TSTR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>TSTR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t TSTR</computeroutput></para>
<para>RTC time stamp time register, Address offset: 0x30 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00648">648</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1a6204786b050eb135fabb15784698e86e"/><section>
    <title>WPR</title>
<indexterm><primary>WPR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>WPR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t WPR</computeroutput></para>
<para>RTC write protection register, Address offset: 0x24 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00645">645</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<anchor xml:id="_struct_r_t_c___type_def_1ac5b3c8be61045a304d3076d4714d29f2"/><section>
    <title>WUTR</title>
<indexterm><primary>WUTR</primary><secondary>RTC_TypeDef</secondary></indexterm>
<indexterm><primary>RTC_TypeDef</primary><secondary>WUTR</secondary></indexterm>
<para><computeroutput><link linkend="_core__armv81mml_8h_1aec43007d9998a0a0e01faede4133d6be">__IO</link> uint32_t WUTR</computeroutput></para>
<para>RTC wakeup timer register, Address offset: 0x14 </para>
<para>
Definition at line <link linkend="_stm32f407xx_8h_source_1l00641">641</link> of file <link linkend="_stm32f407xx_8h_source">stm32f407xx.h</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
Inc/<link linkend="_stm32f407xx_8h">stm32f407xx.h</link></section>
</section>
