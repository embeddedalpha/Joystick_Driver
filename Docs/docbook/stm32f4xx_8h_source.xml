<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f4xx_8h_source" xml:lang="en-US">
<title>stm32f4xx.h</title>
<indexterm><primary>Inc/stm32f4xx.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_stm32f4xx_8h_source_1l00001"/>00001 
<anchor xml:id="_stm32f4xx_8h_source_1l00037"/>00037 <emphasis role="preprocessor">#ifndef&#32;__STM32F4xx_H</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#define&#32;__STM32F4xx_H</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00039"/>00039 
<anchor xml:id="_stm32f4xx_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00041"/>00041 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
<anchor xml:id="_stm32f4xx_8h_source_1l00042"/>00042 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__cplusplus&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00043"/>00043 
<anchor xml:id="_stm32f4xx_8h_source_1l00051"/>00051 <emphasis role="preprocessor">#if&#32;!defined&#32;&#32;(STM32F4)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00052"/><link linkend="_group___library__configuration__section_1ga84d985cb5667176091597f71ffdb9307">00052</link> <emphasis role="preprocessor">#define&#32;STM32F4</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00053"/>00053 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;STM32F4&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00054"/>00054 
<anchor xml:id="_stm32f4xx_8h_source_1l00055"/>00055 <emphasis role="comment">/*&#32;Uncomment&#32;the&#32;line&#32;below&#32;according&#32;to&#32;the&#32;target&#32;STM32&#32;device&#32;used&#32;in&#32;your</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00056"/>00056 <emphasis role="comment">&#32;&#32;&#32;application</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00057"/>00057 <emphasis role="comment">&#32;&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00058"/>00058 <emphasis role="preprocessor">#if&#32;!defined&#32;(STM32F405xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F415xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F407xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F417xx)&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00059"/>00059 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;!defined&#32;(STM32F427xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F437xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F429xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F439xx)&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00060"/>00060 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;!defined&#32;(STM32F401xC)&#32;&amp;&amp;&#32;!defined&#32;(STM32F401xE)&#32;&amp;&amp;&#32;!defined&#32;(STM32F410Tx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F410Cx)&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00061"/>00061 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;!defined&#32;(STM32F410Rx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F411xE)&#32;&amp;&amp;&#32;!defined&#32;(STM32F446xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F469xx)&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00062"/>00062 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;!defined&#32;(STM32F479xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F412Cx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F412Rx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F412Vx)&#32;&amp;&amp;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00063"/>00063 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;!defined&#32;(STM32F412Zx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F413xx)&#32;&amp;&amp;&#32;!defined&#32;(STM32F423xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00064"/>00064 <emphasis role="comment">/*&#32;#define&#32;STM32F405xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00065"/>00065 <emphasis role="comment">/*&#32;#define&#32;STM32F415xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00066"/><link linkend="_group___library__configuration__section_1ga50c9eef9a46dd72bc1e487791702f09c">00066</link> <emphasis role="preprocessor">&#32;#define&#32;STM32F407xx&#32;&#32;&#32;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00067"/>00067 <emphasis role="comment">/*&#32;#define&#32;STM32F417xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00068"/>00068 <emphasis role="comment">/*&#32;#define&#32;STM32F427xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00069"/>00069 <emphasis role="comment">/*&#32;#define&#32;STM32F437xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00070"/>00070 <emphasis role="comment">/*&#32;#define&#32;STM32F429xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00072"/>00072 <emphasis role="comment">/*&#32;#define&#32;STM32F439xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00074"/>00074 <emphasis role="comment">/*&#32;#define&#32;STM32F401xC&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00075"/>00075 <emphasis role="comment">/*&#32;#define&#32;STM32F401xE&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00076"/>00076 <emphasis role="comment">/*&#32;#define&#32;STM32F410Tx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00077"/>00077 <emphasis role="comment">/*&#32;#define&#32;STM32F410Cx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00078"/>00078 <emphasis role="comment">/*&#32;#define&#32;STM32F410Rx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00079"/>00079 <emphasis role="comment">/*&#32;#define&#32;STM32F411xE&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00080"/>00080 <emphasis role="comment">/*&#32;#define&#32;STM32F446xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00082"/>00082 <emphasis role="comment">/*&#32;#define&#32;STM32F469xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00084"/>00084 <emphasis role="comment">/*&#32;#define&#32;STM32F479xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00086"/>00086 <emphasis role="comment">/*&#32;#define&#32;STM32F412Cx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00087"/>00087 <emphasis role="comment">/*&#32;#define&#32;STM32F412Zx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00088"/>00088 <emphasis role="comment">/*&#32;#define&#32;STM32F412Vx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00089"/>00089 <emphasis role="comment">/*&#32;#define&#32;STM32F412Rx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00090"/>00090 <emphasis role="comment">/*&#32;#define&#32;STM32F413xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00092"/>00092 <emphasis role="comment">/*&#32;#define&#32;STM32F423xx&#32;*/</emphasis>&#32;&#32;&#32;
<anchor xml:id="_stm32f4xx_8h_source_1l00093"/>00093 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00094"/>00094 
<anchor xml:id="_stm32f4xx_8h_source_1l00095"/>00095 <emphasis role="comment">/*&#32;&#32;Tip:&#32;To&#32;avoid&#32;modifying&#32;this&#32;file&#32;each&#32;time&#32;you&#32;need&#32;to&#32;switch&#32;between&#32;these</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00096"/>00096 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;devices,&#32;you&#32;can&#32;define&#32;the&#32;device&#32;in&#32;your&#32;toolchain&#32;compiler&#32;preprocessor.</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00097"/>00097 <emphasis role="comment">&#32;&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00098"/>00098 <emphasis role="preprocessor">#if&#32;!defined&#32;&#32;(USE_HAL_DRIVER)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00104"/>00104 <emphasis role="comment">/*#define&#32;USE_HAL_DRIVER&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00105"/>00105 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;USE_HAL_DRIVER&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00106"/>00106 
<anchor xml:id="_stm32f4xx_8h_source_1l00110"/><link linkend="_group___library__configuration__section_1gaf867da11218022a14245b854f6be6a40">00110</link> <emphasis role="preprocessor">#define&#32;__STM32F4xx_CMSIS_VERSION_MAIN&#32;&#32;&#32;(0x02U)&#32;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00111"/><link linkend="_group___library__configuration__section_1ga4841e20bc5159a594936808c113ae3bc">00111</link> <emphasis role="preprocessor">#define&#32;__STM32F4xx_CMSIS_VERSION_SUB1&#32;&#32;&#32;(0x06U)&#32;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00112"/><link linkend="_group___library__configuration__section_1ga6ccbf6336bfb67bf4daeb05eba18a5e3">00112</link> <emphasis role="preprocessor">#define&#32;__STM32F4xx_CMSIS_VERSION_SUB2&#32;&#32;&#32;(0x09U)&#32;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00113"/><link linkend="_group___library__configuration__section_1gafbd304f122892833ce0d4daa3dc4ff13">00113</link> <emphasis role="preprocessor">#define&#32;__STM32F4xx_CMSIS_VERSION_RC&#32;&#32;&#32;&#32;&#32;(0x00U)&#32;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00114"/>00114 <emphasis role="preprocessor">#define&#32;__STM32F4xx_CMSIS_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((__STM32F4xx_CMSIS_VERSION_MAIN&#32;&lt;&lt;&#32;24)\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00115"/>00115 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|(__STM32F4xx_CMSIS_VERSION_SUB1&#32;&lt;&lt;&#32;16)\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00116"/>00116 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|(__STM32F4xx_CMSIS_VERSION_SUB2&#32;&lt;&lt;&#32;8&#32;)\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00117"/>00117 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;|(__STM32F4xx_CMSIS_VERSION_RC))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00118"/>00118 
<anchor xml:id="_stm32f4xx_8h_source_1l00127"/>00127 <emphasis role="preprocessor">#if&#32;defined(STM32F405xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00128"/>00128 <emphasis role="preprocessor">#include&#32;&quot;stm32f405xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00129"/>00129 <emphasis role="preprocessor">#elif&#32;defined(STM32F415xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00130"/>00130 <emphasis role="preprocessor">#include&#32;&quot;stm32f415xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00131"/>00131 <emphasis role="preprocessor">#elif&#32;defined(STM32F407xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00132"/>00132 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_stm32f407xx_8h">stm32f407xx.h</link>&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00133"/>00133 <emphasis role="preprocessor">#elif&#32;defined(STM32F417xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00134"/>00134 <emphasis role="preprocessor">#include&#32;&quot;stm32f417xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00135"/>00135 <emphasis role="preprocessor">#elif&#32;defined(STM32F427xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00136"/>00136 <emphasis role="preprocessor">#include&#32;&quot;stm32f427xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00137"/>00137 <emphasis role="preprocessor">#elif&#32;defined(STM32F437xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00138"/>00138 <emphasis role="preprocessor">#include&#32;&quot;stm32f437xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00139"/>00139 <emphasis role="preprocessor">#elif&#32;defined(STM32F429xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00140"/>00140 <emphasis role="preprocessor">#include&#32;&quot;stm32f429xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00141"/>00141 <emphasis role="preprocessor">#elif&#32;defined(STM32F439xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00142"/>00142 <emphasis role="preprocessor">#include&#32;&quot;stm32f439xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00143"/>00143 <emphasis role="preprocessor">#elif&#32;defined(STM32F401xC)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00144"/>00144 <emphasis role="preprocessor">#include&#32;&quot;stm32f401xc.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00145"/>00145 <emphasis role="preprocessor">#elif&#32;defined(STM32F401xE)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00146"/>00146 <emphasis role="preprocessor">#include&#32;&quot;stm32f401xe.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00147"/>00147 <emphasis role="preprocessor">#elif&#32;defined(STM32F410Tx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00148"/>00148 <emphasis role="preprocessor">#include&#32;&quot;stm32f410tx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00149"/>00149 <emphasis role="preprocessor">#elif&#32;defined(STM32F410Cx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00150"/>00150 <emphasis role="preprocessor">#include&#32;&quot;stm32f410cx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00151"/>00151 <emphasis role="preprocessor">#elif&#32;defined(STM32F410Rx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00152"/>00152 <emphasis role="preprocessor">#include&#32;&quot;stm32f410rx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00153"/>00153 <emphasis role="preprocessor">#elif&#32;defined(STM32F411xE)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00154"/>00154 <emphasis role="preprocessor">#include&#32;&quot;stm32f411xe.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00155"/>00155 <emphasis role="preprocessor">#elif&#32;defined(STM32F446xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00156"/>00156 <emphasis role="preprocessor">#include&#32;&quot;stm32f446xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00157"/>00157 <emphasis role="preprocessor">#elif&#32;defined(STM32F469xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00158"/>00158 <emphasis role="preprocessor">#include&#32;&quot;stm32f469xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00159"/>00159 <emphasis role="preprocessor">#elif&#32;defined(STM32F479xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00160"/>00160 <emphasis role="preprocessor">#include&#32;&quot;stm32f479xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00161"/>00161 <emphasis role="preprocessor">#elif&#32;defined(STM32F412Cx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00162"/>00162 <emphasis role="preprocessor">#include&#32;&quot;stm32f412cx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00163"/>00163 <emphasis role="preprocessor">#elif&#32;defined(STM32F412Zx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00164"/>00164 <emphasis role="preprocessor">#include&#32;&quot;stm32f412zx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00165"/>00165 <emphasis role="preprocessor">#elif&#32;defined(STM32F412Rx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00166"/>00166 <emphasis role="preprocessor">#include&#32;&quot;stm32f412rx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00167"/>00167 <emphasis role="preprocessor">#elif&#32;defined(STM32F412Vx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00168"/>00168 <emphasis role="preprocessor">#include&#32;&quot;stm32f412vx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00169"/>00169 <emphasis role="preprocessor">#elif&#32;defined(STM32F413xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00170"/>00170 <emphasis role="preprocessor">#include&#32;&quot;stm32f413xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00171"/>00171 <emphasis role="preprocessor">#elif&#32;defined(STM32F423xx)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00172"/>00172 <emphasis role="preprocessor">#include&#32;&quot;stm32f423xx.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00173"/>00173 <emphasis role="preprocessor">#else</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00174"/>00174 <emphasis role="preprocessor">#error&#32;&quot;Please&#32;select&#32;first&#32;the&#32;target&#32;STM32F4xx&#32;device&#32;used&#32;in&#32;your&#32;application&#32;(in&#32;stm32f4xx.h&#32;file)&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00175"/>00175 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00176"/>00176 
<anchor xml:id="_stm32f4xx_8h_source_1l00184"/>00184 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00185"/>00185 {
<anchor xml:id="_stm32f4xx_8h_source_1l00186"/>00186 &#32;&#32;RESET&#32;=&#32;0U,
<anchor xml:id="_stm32f4xx_8h_source_1l00187"/>00187 &#32;&#32;SET&#32;=&#32;!RESET
<anchor xml:id="_stm32f4xx_8h_source_1l00188"/>00188 }&#32;FlagStatus,&#32;ITStatus;
<anchor xml:id="_stm32f4xx_8h_source_1l00189"/>00189 
<anchor xml:id="_stm32f4xx_8h_source_1l00190"/>00190 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00191"/>00191 {
<anchor xml:id="_stm32f4xx_8h_source_1l00192"/>00192 &#32;&#32;DISABLE&#32;=&#32;0U,
<anchor xml:id="_stm32f4xx_8h_source_1l00193"/>00193 &#32;&#32;ENABLE&#32;=&#32;!DISABLE
<anchor xml:id="_stm32f4xx_8h_source_1l00194"/>00194 }&#32;FunctionalState;
<anchor xml:id="_stm32f4xx_8h_source_1l00195"/>00195 <emphasis role="preprocessor">#define&#32;IS_FUNCTIONAL_STATE(STATE)&#32;(((STATE)&#32;==&#32;DISABLE)&#32;||&#32;((STATE)&#32;==&#32;ENABLE))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00196"/>00196 
<anchor xml:id="_stm32f4xx_8h_source_1l00197"/>00197 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00198"/>00198 {
<anchor xml:id="_stm32f4xx_8h_source_1l00199"/>00199 &#32;&#32;SUCCESS&#32;=&#32;0U,
<anchor xml:id="_stm32f4xx_8h_source_1l00200"/>00200 &#32;&#32;ERROR&#32;=&#32;!SUCCESS
<anchor xml:id="_stm32f4xx_8h_source_1l00201"/>00201 }&#32;ErrorStatus;
<anchor xml:id="_stm32f4xx_8h_source_1l00202"/>00202 
<anchor xml:id="_stm32f4xx_8h_source_1l00211"/>00211 <emphasis role="preprocessor">#define&#32;SET_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;&#32;((REG)&#32;|=&#32;(BIT))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00212"/>00212 
<anchor xml:id="_stm32f4xx_8h_source_1l00213"/>00213 <emphasis role="preprocessor">#define&#32;CLEAR_BIT(REG,&#32;BIT)&#32;&#32;&#32;((REG)&#32;&amp;=&#32;~(BIT))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00214"/>00214 
<anchor xml:id="_stm32f4xx_8h_source_1l00215"/>00215 <emphasis role="preprocessor">#define&#32;READ_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;((REG)&#32;&amp;&#32;(BIT))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00216"/>00216 
<anchor xml:id="_stm32f4xx_8h_source_1l00217"/>00217 <emphasis role="preprocessor">#define&#32;CLEAR_REG(REG)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((REG)&#32;=&#32;(0x0))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00218"/>00218 
<anchor xml:id="_stm32f4xx_8h_source_1l00219"/>00219 <emphasis role="preprocessor">#define&#32;WRITE_REG(REG,&#32;VAL)&#32;&#32;&#32;((REG)&#32;=&#32;(VAL))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00220"/>00220 
<anchor xml:id="_stm32f4xx_8h_source_1l00221"/>00221 <emphasis role="preprocessor">#define&#32;READ_REG(REG)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((REG))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00222"/>00222 
<anchor xml:id="_stm32f4xx_8h_source_1l00223"/>00223 <emphasis role="preprocessor">#define&#32;MODIFY_REG(REG,&#32;CLEARMASK,&#32;SETMASK)&#32;&#32;WRITE_REG((REG),&#32;(((READ_REG(REG))&#32;&amp;&#32;(~(CLEARMASK)))&#32;|&#32;(SETMASK)))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00224"/>00224 
<anchor xml:id="_stm32f4xx_8h_source_1l00225"/>00225 <emphasis role="preprocessor">#define&#32;POSITION_VAL(VAL)&#32;&#32;&#32;&#32;&#32;(__CLZ(__RBIT(VAL)))</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00226"/>00226 
<anchor xml:id="_stm32f4xx_8h_source_1l00227"/>00227 <emphasis role="comment">/*&#32;Use&#32;of&#32;CMSIS&#32;compiler&#32;intrinsics&#32;for&#32;register&#32;exclusive&#32;access&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00228"/>00228 <emphasis role="comment">/*&#32;Atomic&#32;32-bit&#32;register&#32;access&#32;macro&#32;to&#32;set&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00229"/>00229 <emphasis role="preprocessor">#define&#32;ATOMIC_SET_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00230"/>00230 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00231"/>00231 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00232"/>00232 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00233"/>00233 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXW((__IO&#32;uint32_t&#32;*)&amp;(REG))&#32;|&#32;(BIT);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00234"/>00234 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXW(val,(__IO&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00235"/>00235 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00236"/>00236 
<anchor xml:id="_stm32f4xx_8h_source_1l00237"/>00237 <emphasis role="comment">/*&#32;Atomic&#32;32-bit&#32;register&#32;access&#32;macro&#32;to&#32;clear&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00238"/>00238 <emphasis role="preprocessor">#define&#32;ATOMIC_CLEAR_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00239"/>00239 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00240"/>00240 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00241"/>00241 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00242"/>00242 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXW((__IO&#32;uint32_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(BIT);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00243"/>00243 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXW(val,(__IO&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00244"/>00244 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00245"/>00245 
<anchor xml:id="_stm32f4xx_8h_source_1l00246"/>00246 <emphasis role="comment">/*&#32;Atomic&#32;32-bit&#32;register&#32;access&#32;macro&#32;to&#32;clear&#32;and&#32;set&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00247"/>00247 <emphasis role="preprocessor">#define&#32;ATOMIC_MODIFY_REG(REG,&#32;CLEARMSK,&#32;SETMASK)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00248"/>00248 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00249"/>00249 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint32_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00250"/>00250 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00251"/>00251 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;(__LDREXW((__IO&#32;uint32_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(CLEARMSK))&#32;|&#32;(SETMASK);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00252"/>00252 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXW(val,(__IO&#32;uint32_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00253"/>00253 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00254"/>00254 
<anchor xml:id="_stm32f4xx_8h_source_1l00255"/>00255 <emphasis role="comment">/*&#32;Atomic&#32;16-bit&#32;register&#32;access&#32;macro&#32;to&#32;set&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00256"/>00256 <emphasis role="preprocessor">#define&#32;ATOMIC_SETH_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00257"/>00257 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00258"/>00258 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00259"/>00259 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00260"/>00260 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXH((__IO&#32;uint16_t&#32;*)&amp;(REG))&#32;|&#32;(BIT);&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00261"/>00261 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXH(val,(__IO&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00262"/>00262 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00263"/>00263 
<anchor xml:id="_stm32f4xx_8h_source_1l00264"/>00264 <emphasis role="comment">/*&#32;Atomic&#32;16-bit&#32;register&#32;access&#32;macro&#32;to&#32;clear&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00265"/>00265 <emphasis role="preprocessor">#define&#32;ATOMIC_CLEARH_BIT(REG,&#32;BIT)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00266"/>00266 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00267"/>00267 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00268"/>00268 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00269"/>00269 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;__LDREXH((__IO&#32;uint16_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(BIT);&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00270"/>00270 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXH(val,(__IO&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00271"/>00271 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00272"/>00272 
<anchor xml:id="_stm32f4xx_8h_source_1l00273"/>00273 <emphasis role="comment">/*&#32;Atomic&#32;16-bit&#32;register&#32;access&#32;macro&#32;to&#32;clear&#32;and&#32;set&#32;one&#32;or&#32;several&#32;bits&#32;*/</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00274"/>00274 <emphasis role="preprocessor">#define&#32;ATOMIC_MODIFYH_REG(REG,&#32;CLEARMSK,&#32;SETMASK)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00275"/>00275 <emphasis role="preprocessor">&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00276"/>00276 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;uint16_t&#32;val;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00277"/>00277 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;do&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00278"/>00278 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;val&#32;=&#32;(__LDREXH((__IO&#32;uint16_t&#32;*)&amp;(REG))&#32;&amp;&#32;~(CLEARMSK))&#32;|&#32;(SETMASK);&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00279"/>00279 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;while&#32;((__STREXH(val,(__IO&#32;uint16_t&#32;*)&amp;(REG)))&#32;!=&#32;0U);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00280"/>00280 <emphasis role="preprocessor">&#32;&#32;}&#32;while(0)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00281"/>00281 
<anchor xml:id="_stm32f4xx_8h_source_1l00286"/>00286 <emphasis role="preprocessor">#if&#32;defined&#32;(USE_HAL_DRIVER)</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00287"/>00287 <emphasis role="preprocessor">#include&#32;&quot;stm32f4xx_hal.h&quot;</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00288"/>00288 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;USE_HAL_DRIVER&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00289"/>00289 
<anchor xml:id="_stm32f4xx_8h_source_1l00290"/>00290 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00291"/>00291 }
<anchor xml:id="_stm32f4xx_8h_source_1l00292"/>00292 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__cplusplus&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
<anchor xml:id="_stm32f4xx_8h_source_1l00293"/>00293 
<anchor xml:id="_stm32f4xx_8h_source_1l00294"/>00294 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__STM32F4xx_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
